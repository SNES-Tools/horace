-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Parser.y
-----------------------------------------------------------------------------


terminal '_' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parse -> mode_decl                          (0)
	mode_decl -> mode Id '{' gfx_decl pal_decl types_decl state_decl main_decl func_decl sprite_decl '}'   (1)
	gfx_decl -> graphics '{' gfx_list '}'              (2)
	gfx_list ->                                        (3)
	gfx_list -> gfx gfx_list                           (4)
	gfx -> Id ':' gfx_type '=' str                     (5)
	gfx_type -> spriteT '[' int ']'                    (6)
	pal_decl -> palettes '{' pal_list '}'              (7)
	pal_list ->                                        (8)
	pal_list -> pal pal_list                           (9)
	pal -> Id ':' pal_type '=' '[' color_list ']'      (10)
	pal_type -> spriteT                                (11)
	color_list -> color                                (12)
	color_list -> color ',' color_list                 (13)
	color -> '(' int ',' int ',' int ')'               (14)
	types_decl -> types '{' type_list '}'              (15)
	type_list ->                                       (16)
	type_list -> type type_list                        (17)
	type -> Id '{' type_cases '}'                      (18)
	type_cases -> type_case                            (19)
	type_cases -> type_case ',' type_cases             (20)
	type_case -> Id                                    (21)
	type_case -> Idc type_vars ')'                     (22)
	type_vars -> type_reg                              (23)
	type_vars -> type_reg ',' type_vars                (24)
	state_decl -> state '{' state_vars '}'             (25)
	state_vars ->                                      (26)
	state_vars -> state_var state_vars                 (27)
	state_var -> id ':' type_state '=' expr            (28)
	main_decl -> main expr                             (29)
	func_decl -> funcs '{' func_list '}'               (30)
	func_list ->                                       (31)
	func_list -> func func_list                        (32)
	func -> id '(' params ')' ':' type_reg expr        (33)
	func -> idc params ')' ':' type_reg expr           (34)
	params ->                                          (35)
	params -> param                                    (36)
	params -> param ',' params                         (37)
	param -> id ':' type_reg                           (38)
	sprite_decl -> sprites '{' sprite_list '}'         (39)
	sprite_list ->                                     (40)
	sprite_list -> sprite sprite_list                  (41)
	sprite -> Id '{' anim_decl state_decl main_decl meth_decl '}'   (42)
	anim_decl -> anims '{' anim_list '}'               (43)
	anim_list ->                                       (44)
	anim_list -> anim anim_list                        (45)
	anim -> Id '{' tile_list '}'                       (46)
	tile_list -> tile                                  (47)
	tile_list -> tile tile_list                        (48)
	tile -> at '(' int ',' int ')' ':' Id '[' int ']' in Id   (49)
	meth_decl -> meths '{' func_list '}'               (50)
	expr -> int                                        (51)
	expr -> rint                                       (52)
	expr -> '{' vars exprs '}'                         (53)
	expr -> if pred then expr else expr                (54)
	expr -> for id '=' expr to expr do expr            (55)
	expr -> lval '<-' expr                             (56)
	expr -> idc args ')'                               (57)
	expr -> Idc args ')'                               (58)
	expr -> Id                                         (59)
	expr -> id '.' idc args ')'                        (60)
	expr -> match expr with '{' cases '}'              (61)
	expr -> trans '[' int ',' int ']' '(' expr ')'     (62)
	expr -> ext '[' int ']' '(' expr ')'               (63)
	expr -> sext '[' int ']' '(' expr ')'              (64)
	expr -> shrink '[' int ']' '(' expr ')'            (65)
	expr -> expr '+' expr                              (66)
	expr -> expr '-' expr                              (67)
	expr -> expr '&' expr                              (68)
	expr -> expr '^' expr                              (69)
	expr -> expr '|' expr                              (70)
	expr -> id                                         (71)
	expr -> '(' expr ')'                               (72)
	expr -> void                                       (73)
	lval -> id                                         (74)
	lval -> id '[' expr ']'                            (75)
	exprs ->                                           (76)
	exprs -> expr exprs                                (77)
	vars ->                                            (78)
	vars -> var_decl vars                              (79)
	var_decl -> var id ':' type_reg '=' expr           (80)
	args ->                                            (81)
	args -> expr                                       (82)
	args -> expr ',' args                              (83)
	cases ->                                           (84)
	cases -> case cases                                (85)
	case -> pat '->' expr                              (86)
	pat -> Id                                          (87)
	pat -> Idc pats ')'                                (88)
	pats -> id                                         (89)
	pats -> id ',' pats                                (90)
	pred -> true                                       (91)
	pred -> false                                      (92)
	pred -> not pred                                   (93)
	pred -> pred and pred                              (94)
	pred -> pred or pred                               (95)
	pred -> expr comp expr                             (96)
	pred -> pressed '[' int ',' button ']'             (97)
	pred -> holding '[' int ',' button ']'             (98)
	comp -> '='                                        (99)
	comp -> '/='                                       (100)
	comp -> '<'                                        (101)
	comp -> '>'                                        (102)
	comp -> '<='                                       (103)
	comp -> '>='                                       (104)
	comp -> '<$'                                       (105)
	comp -> '>$'                                       (106)
	comp -> '<=$'                                      (107)
	comp -> '>=$'                                      (108)
	button -> A                                        (109)
	button -> X                                        (110)
	button -> L                                        (111)
	button -> R                                        (112)
	button -> B                                        (113)
	button -> Y                                        (114)
	button -> SELECT                                   (115)
	button -> START                                    (116)
	button -> UP                                       (117)
	button -> DOWN                                     (118)
	button -> LEFT                                     (119)
	button -> RIGHT                                    (120)
	type_state -> type_reg                             (121)
	type_reg -> bits '[' int ']'                       (122)
	type_reg -> range '[' int ',' int ']'              (123)
	type_reg -> Id                                     (124)
	type_reg -> void                                   (125)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	mode           { TokenMode }
	state          { TokenState }
	main           { TokenMain }
	funcs          { TokenFunctions }
	types          { TokenTypes }
	int            { TokenInt $$ }
	rint           { TokenRInt $$ }
	id             { TokenId $$ }
	idc            { TokenIdC $$ }
	Id             { TokenCapId $$ }
	Idc            { TokenCapIdC $$ }
	str            { TokenString $$ }
	var            { TokenVar }
	bits           { TokenBits }
	range          { TokenRange }
	void           { TokenVoid }
	if             { TokenIf }
	then           { TokenThen }
	else           { TokenElse }
	for            { TokenFor }
	to             { TokenTo }
	do             { TokenDo }
	match          { TokenMatch }
	with           { TokenWith }
	true           { TokenTrue }
	false          { TokenFalse }
	not            { TokenNot }
	and            { TokenAnd }
	or             { TokenOr }
	trans          { TokenTransmute }
	shrink         { TokenShrink }
	ext            { TokenExtend }
	sext           { TokenSignExtend }
	pressed        { TokenPressed }
	holding        { TokenHolding }
	A              { TokenButtonA }
	X              { TokenButtonX }
	L              { TokenButtonL }
	R              { TokenButtonR }
	B              { TokenButtonB }
	Y              { TokenButtonY }
	SELECT         { TokenButtonSELECT }
	START          { TokenButtonSTART }
	UP             { TokenButtonUP }
	DOWN           { TokenButtonDOWN }
	LEFT           { TokenButtonLEFT }
	RIGHT          { TokenButtonRIGHT }
	palettes       { TokenPalettes }
	graphics       { TokenGraphics }
	spriteT        { TokenSprite }
	sprites        { TokenSprites }
	anims          { TokenAnimations }
	meths          { TokenMethods }
	at             { TokenAt }
	in             { TokenIn }
	'+'            { TokenPlus }
	'-'            { TokenMinus }
	'&'            { TokenAmphersand }
	'|'            { TokenPipe }
	'^'            { TokenCaret }
	'='            { TokenEq }
	'/='           { TokenNeq }
	'('            { TokenLParen }
	')'            { TokenRParen }
	'{'            { TokenLBrace }
	'}'            { TokenRBrace }
	'['            { TokenLBracket }
	']'            { TokenRBracket }
	':'            { TokenColon }
	','            { TokenComma }
	'.'            { TokenDot }
	'_'            { TokenUnderscore }
	'->'           { TokenRArrow }
	'<-'           { TokenLArrow }
	'<'            { TokenLe }
	'>'            { TokenGe }
	'<='           { TokenLeq }
	'>='           { TokenGeq }
	'<$'           { TokenLeS }
	'<=$'          { TokenLeqS }
	'>$'           { TokenGeS }
	'>=$'          { TokenGeqS }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parse    rule  0
	mode_decl       rule  1
	gfx_decl        rule  2
	gfx_list        rules 3, 4
	gfx             rule  5
	gfx_type        rule  6
	pal_decl        rule  7
	pal_list        rules 8, 9
	pal             rule  10
	pal_type        rule  11
	color_list      rules 12, 13
	color           rule  14
	types_decl      rule  15
	type_list       rules 16, 17
	type            rule  18
	type_cases      rules 19, 20
	type_case       rules 21, 22
	type_vars       rules 23, 24
	state_decl      rule  25
	state_vars      rules 26, 27
	state_var       rule  28
	main_decl       rule  29
	func_decl       rule  30
	func_list       rules 31, 32
	func            rules 33, 34
	params          rules 35, 36, 37
	param           rule  38
	sprite_decl     rule  39
	sprite_list     rules 40, 41
	sprite          rule  42
	anim_decl       rule  43
	anim_list       rules 44, 45
	anim            rule  46
	tile_list       rules 47, 48
	tile            rule  49
	meth_decl       rule  50
	expr            rules 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73
	lval            rules 74, 75
	exprs           rules 76, 77
	vars            rules 78, 79
	var_decl        rule  80
	args            rules 81, 82, 83
	cases           rules 84, 85
	case            rule  86
	pat             rules 87, 88
	pats            rules 89, 90
	pred            rules 91, 92, 93, 94, 95, 96, 97, 98
	comp            rules 99, 100, 101, 102, 103, 104, 105, 106, 107, 108
	button          rules 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120
	type_state      rule  121
	type_reg        rules 122, 123, 124, 125

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parse -> . mode_decl                         (rule 0)

	mode           shift, and enter state 2

	mode_decl      goto state 3

State 1

	mode_decl -> . mode Id '{' gfx_decl pal_decl types_decl state_decl main_decl func_decl sprite_decl '}'    (rule 1)

	mode           shift, and enter state 2


State 2

	mode_decl -> mode . Id '{' gfx_decl pal_decl types_decl state_decl main_decl func_decl sprite_decl '}'    (rule 1)

	Id             shift, and enter state 4


State 3

	%start_parse -> mode_decl .                         (rule 0)

	%eof           accept


State 4

	mode_decl -> mode Id . '{' gfx_decl pal_decl types_decl state_decl main_decl func_decl sprite_decl '}'    (rule 1)

	'{'            shift, and enter state 5


State 5

	mode_decl -> mode Id '{' . gfx_decl pal_decl types_decl state_decl main_decl func_decl sprite_decl '}'    (rule 1)

	graphics       shift, and enter state 7

	gfx_decl       goto state 6

State 6

	mode_decl -> mode Id '{' gfx_decl . pal_decl types_decl state_decl main_decl func_decl sprite_decl '}'    (rule 1)

	palettes       shift, and enter state 10

	pal_decl       goto state 9

State 7

	gfx_decl -> graphics . '{' gfx_list '}'             (rule 2)

	'{'            shift, and enter state 8


State 8

	gfx_decl -> graphics '{' . gfx_list '}'             (rule 2)

	Id             shift, and enter state 16
	'}'            reduce using rule 3

	gfx_list       goto state 14
	gfx            goto state 15

State 9

	mode_decl -> mode Id '{' gfx_decl pal_decl . types_decl state_decl main_decl func_decl sprite_decl '}'    (rule 1)

	types          shift, and enter state 13

	types_decl     goto state 12

State 10

	pal_decl -> palettes . '{' pal_list '}'             (rule 7)

	'{'            shift, and enter state 11


State 11

	pal_decl -> palettes '{' . pal_list '}'             (rule 7)

	Id             shift, and enter state 25
	'}'            reduce using rule 8

	pal_list       goto state 23
	pal            goto state 24

State 12

	mode_decl -> mode Id '{' gfx_decl pal_decl types_decl . state_decl main_decl func_decl sprite_decl '}'    (rule 1)

	state          shift, and enter state 22

	state_decl     goto state 21

State 13

	types_decl -> types . '{' type_list '}'             (rule 15)

	'{'            shift, and enter state 20


State 14

	gfx_decl -> graphics '{' gfx_list . '}'             (rule 2)

	'}'            shift, and enter state 19


State 15

	gfx_list -> gfx . gfx_list                          (rule 4)

	Id             shift, and enter state 16
	'}'            reduce using rule 3

	gfx_list       goto state 18
	gfx            goto state 15

State 16

	gfx -> Id . ':' gfx_type '=' str                    (rule 5)

	':'            shift, and enter state 17


State 17

	gfx -> Id ':' . gfx_type '=' str                    (rule 5)

	spriteT        shift, and enter state 36

	gfx_type       goto state 35

State 18

	gfx_list -> gfx gfx_list .                          (rule 4)

	'}'            reduce using rule 4


State 19

	gfx_decl -> graphics '{' gfx_list '}' .             (rule 2)

	palettes       reduce using rule 2


State 20

	types_decl -> types '{' . type_list '}'             (rule 15)

	Id             shift, and enter state 34
	'}'            reduce using rule 16

	type_list      goto state 32
	type           goto state 33

State 21

	mode_decl -> mode Id '{' gfx_decl pal_decl types_decl state_decl . main_decl func_decl sprite_decl '}'    (rule 1)

	main           shift, and enter state 31

	main_decl      goto state 30

State 22

	state_decl -> state . '{' state_vars '}'            (rule 25)

	'{'            shift, and enter state 29


State 23

	pal_decl -> palettes '{' pal_list . '}'             (rule 7)

	'}'            shift, and enter state 28


State 24

	pal_list -> pal . pal_list                          (rule 9)

	Id             shift, and enter state 25
	'}'            reduce using rule 8

	pal_list       goto state 27
	pal            goto state 24

State 25

	pal -> Id . ':' pal_type '=' '[' color_list ']'     (rule 10)

	':'            shift, and enter state 26


State 26

	pal -> Id ':' . pal_type '=' '[' color_list ']'     (rule 10)

	spriteT        shift, and enter state 66

	pal_type       goto state 65

State 27

	pal_list -> pal pal_list .                          (rule 9)

	'}'            reduce using rule 9


State 28

	pal_decl -> palettes '{' pal_list '}' .             (rule 7)

	types          reduce using rule 7


State 29

	state_decl -> state '{' . state_vars '}'            (rule 25)

	id             shift, and enter state 64
	'}'            reduce using rule 26

	state_vars     goto state 62
	state_var      goto state 63

State 30

	mode_decl -> mode Id '{' gfx_decl pal_decl types_decl state_decl main_decl . func_decl sprite_decl '}'    (rule 1)

	funcs          shift, and enter state 61

	func_decl      goto state 60

State 31

	main_decl -> main . expr                            (rule 29)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 42
	lval           goto state 43

State 32

	types_decl -> types '{' type_list . '}'             (rule 15)

	'}'            shift, and enter state 41


State 33

	type_list -> type . type_list                       (rule 17)

	Id             shift, and enter state 34
	'}'            reduce using rule 16

	type_list      goto state 40
	type           goto state 33

State 34

	type -> Id . '{' type_cases '}'                     (rule 18)

	'{'            shift, and enter state 39


State 35

	gfx -> Id ':' gfx_type . '=' str                    (rule 5)

	'='            shift, and enter state 38


State 36

	gfx_type -> spriteT . '[' int ']'                   (rule 6)

	'['            shift, and enter state 37


State 37

	gfx_type -> spriteT '[' . int ']'                   (rule 6)

	int            shift, and enter state 107


State 38

	gfx -> Id ':' gfx_type '=' . str                    (rule 5)

	str            shift, and enter state 106


State 39

	type -> Id '{' . type_cases '}'                     (rule 18)

	Id             shift, and enter state 104
	Idc            shift, and enter state 105

	type_cases     goto state 102
	type_case      goto state 103

State 40

	type_list -> type type_list .                       (rule 17)

	'}'            reduce using rule 17


State 41

	types_decl -> types '{' type_list '}' .             (rule 15)

	state          reduce using rule 15


State 42

	main_decl -> main expr .                            (rule 29)
	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)

	funcs          reduce using rule 29
	meths          reduce using rule 29
	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            shift, and enter state 99
	'|'            shift, and enter state 100
	'^'            shift, and enter state 101


State 43

	expr -> lval . '<-' expr                            (rule 56)

	'<-'           shift, and enter state 96


State 44

	expr -> int .                                       (rule 51)

	funcs          reduce using rule 51
	int            reduce using rule 51
	rint           reduce using rule 51
	id             reduce using rule 51
	idc            reduce using rule 51
	Id             reduce using rule 51
	Idc            reduce using rule 51
	var            reduce using rule 51
	void           reduce using rule 51
	if             reduce using rule 51
	then           reduce using rule 51
	else           reduce using rule 51
	for            reduce using rule 51
	to             reduce using rule 51
	do             reduce using rule 51
	match          reduce using rule 51
	with           reduce using rule 51
	and            reduce using rule 51
	or             reduce using rule 51
	trans          reduce using rule 51
	shrink         reduce using rule 51
	ext            reduce using rule 51
	sext           reduce using rule 51
	meths          reduce using rule 51
	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'&'            reduce using rule 51
	'|'            reduce using rule 51
	'^'            reduce using rule 51
	'='            reduce using rule 51
	'/='           reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'{'            reduce using rule 51
	'}'            reduce using rule 51
	']'            reduce using rule 51
	','            reduce using rule 51
	'<'            reduce using rule 51
	'>'            reduce using rule 51
	'<='           reduce using rule 51
	'>='           reduce using rule 51
	'<$'           reduce using rule 51
	'<=$'          reduce using rule 51
	'>$'           reduce using rule 51
	'>=$'          reduce using rule 51


State 45

	expr -> rint .                                      (rule 52)

	funcs          reduce using rule 52
	int            reduce using rule 52
	rint           reduce using rule 52
	id             reduce using rule 52
	idc            reduce using rule 52
	Id             reduce using rule 52
	Idc            reduce using rule 52
	var            reduce using rule 52
	void           reduce using rule 52
	if             reduce using rule 52
	then           reduce using rule 52
	else           reduce using rule 52
	for            reduce using rule 52
	to             reduce using rule 52
	do             reduce using rule 52
	match          reduce using rule 52
	with           reduce using rule 52
	and            reduce using rule 52
	or             reduce using rule 52
	trans          reduce using rule 52
	shrink         reduce using rule 52
	ext            reduce using rule 52
	sext           reduce using rule 52
	meths          reduce using rule 52
	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'&'            reduce using rule 52
	'|'            reduce using rule 52
	'^'            reduce using rule 52
	'='            reduce using rule 52
	'/='           reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'{'            reduce using rule 52
	'}'            reduce using rule 52
	']'            reduce using rule 52
	','            reduce using rule 52
	'<'            reduce using rule 52
	'>'            reduce using rule 52
	'<='           reduce using rule 52
	'>='           reduce using rule 52
	'<$'           reduce using rule 52
	'<=$'          reduce using rule 52
	'>$'           reduce using rule 52
	'>=$'          reduce using rule 52


State 46

	expr -> id . '.' idc args ')'                       (rule 60)
	expr -> id .                                        (rule 71)
	lval -> id .                                        (rule 74)
	lval -> id . '[' expr ']'                           (rule 75)

	funcs          reduce using rule 71
	int            reduce using rule 71
	rint           reduce using rule 71
	id             reduce using rule 71
	idc            reduce using rule 71
	Id             reduce using rule 71
	Idc            reduce using rule 71
	var            reduce using rule 71
	void           reduce using rule 71
	if             reduce using rule 71
	then           reduce using rule 71
	else           reduce using rule 71
	for            reduce using rule 71
	to             reduce using rule 71
	do             reduce using rule 71
	match          reduce using rule 71
	with           reduce using rule 71
	and            reduce using rule 71
	or             reduce using rule 71
	trans          reduce using rule 71
	shrink         reduce using rule 71
	ext            reduce using rule 71
	sext           reduce using rule 71
	meths          reduce using rule 71
	'+'            reduce using rule 71
	'-'            reduce using rule 71
	'&'            reduce using rule 71
	'|'            reduce using rule 71
	'^'            reduce using rule 71
	'='            reduce using rule 71
	'/='           reduce using rule 71
	'('            reduce using rule 71
	')'            reduce using rule 71
	'{'            reduce using rule 71
	'}'            reduce using rule 71
	'['            shift, and enter state 94
	']'            reduce using rule 71
	','            reduce using rule 71
	'.'            shift, and enter state 95
	'<-'           reduce using rule 74
	'<'            reduce using rule 71
	'>'            reduce using rule 71
	'<='           reduce using rule 71
	'>='           reduce using rule 71
	'<$'           reduce using rule 71
	'<=$'          reduce using rule 71
	'>$'           reduce using rule 71
	'>=$'          reduce using rule 71


State 47

	expr -> idc . args ')'                              (rule 57)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	')'            reduce using rule 81
	'{'            shift, and enter state 59

	expr           goto state 91
	lval           goto state 43
	args           goto state 93

State 48

	expr -> Id .                                        (rule 59)

	funcs          reduce using rule 59
	int            reduce using rule 59
	rint           reduce using rule 59
	id             reduce using rule 59
	idc            reduce using rule 59
	Id             reduce using rule 59
	Idc            reduce using rule 59
	var            reduce using rule 59
	void           reduce using rule 59
	if             reduce using rule 59
	then           reduce using rule 59
	else           reduce using rule 59
	for            reduce using rule 59
	to             reduce using rule 59
	do             reduce using rule 59
	match          reduce using rule 59
	with           reduce using rule 59
	and            reduce using rule 59
	or             reduce using rule 59
	trans          reduce using rule 59
	shrink         reduce using rule 59
	ext            reduce using rule 59
	sext           reduce using rule 59
	meths          reduce using rule 59
	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'&'            reduce using rule 59
	'|'            reduce using rule 59
	'^'            reduce using rule 59
	'='            reduce using rule 59
	'/='           reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'{'            reduce using rule 59
	'}'            reduce using rule 59
	']'            reduce using rule 59
	','            reduce using rule 59
	'<'            reduce using rule 59
	'>'            reduce using rule 59
	'<='           reduce using rule 59
	'>='           reduce using rule 59
	'<$'           reduce using rule 59
	'<=$'          reduce using rule 59
	'>$'           reduce using rule 59
	'>=$'          reduce using rule 59


State 49

	expr -> Idc . args ')'                              (rule 58)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	')'            reduce using rule 81
	'{'            shift, and enter state 59

	expr           goto state 91
	lval           goto state 43
	args           goto state 92

State 50

	expr -> void .                                      (rule 73)

	funcs          reduce using rule 73
	int            reduce using rule 73
	rint           reduce using rule 73
	id             reduce using rule 73
	idc            reduce using rule 73
	Id             reduce using rule 73
	Idc            reduce using rule 73
	var            reduce using rule 73
	void           reduce using rule 73
	if             reduce using rule 73
	then           reduce using rule 73
	else           reduce using rule 73
	for            reduce using rule 73
	to             reduce using rule 73
	do             reduce using rule 73
	match          reduce using rule 73
	with           reduce using rule 73
	and            reduce using rule 73
	or             reduce using rule 73
	trans          reduce using rule 73
	shrink         reduce using rule 73
	ext            reduce using rule 73
	sext           reduce using rule 73
	meths          reduce using rule 73
	'+'            reduce using rule 73
	'-'            reduce using rule 73
	'&'            reduce using rule 73
	'|'            reduce using rule 73
	'^'            reduce using rule 73
	'='            reduce using rule 73
	'/='           reduce using rule 73
	'('            reduce using rule 73
	')'            reduce using rule 73
	'{'            reduce using rule 73
	'}'            reduce using rule 73
	']'            reduce using rule 73
	','            reduce using rule 73
	'<'            reduce using rule 73
	'>'            reduce using rule 73
	'<='           reduce using rule 73
	'>='           reduce using rule 73
	'<$'           reduce using rule 73
	'<=$'          reduce using rule 73
	'>$'           reduce using rule 73
	'>=$'          reduce using rule 73


State 51

	expr -> if . pred then expr else expr               (rule 54)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	true           shift, and enter state 86
	false          shift, and enter state 87
	not            shift, and enter state 88
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	pressed        shift, and enter state 89
	holding        shift, and enter state 90
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 84
	lval           goto state 43
	pred           goto state 85

State 52

	expr -> for . id '=' expr to expr do expr           (rule 55)

	id             shift, and enter state 83


State 53

	expr -> match . expr with '{' cases '}'             (rule 61)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 82
	lval           goto state 43

State 54

	expr -> trans . '[' int ',' int ']' '(' expr ')'    (rule 62)

	'['            shift, and enter state 81


State 55

	expr -> shrink . '[' int ']' '(' expr ')'           (rule 65)

	'['            shift, and enter state 80


State 56

	expr -> ext . '[' int ']' '(' expr ')'              (rule 63)

	'['            shift, and enter state 79


State 57

	expr -> sext . '[' int ']' '(' expr ')'             (rule 64)

	'['            shift, and enter state 78


State 58

	expr -> '(' . expr ')'                              (rule 72)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 77
	lval           goto state 43

State 59

	expr -> '{' . vars exprs '}'                        (rule 53)

	int            reduce using rule 78
	rint           reduce using rule 78
	id             reduce using rule 78
	idc            reduce using rule 78
	Id             reduce using rule 78
	Idc            reduce using rule 78
	var            shift, and enter state 76
	void           reduce using rule 78
	if             reduce using rule 78
	for            reduce using rule 78
	match          reduce using rule 78
	trans          reduce using rule 78
	shrink         reduce using rule 78
	ext            reduce using rule 78
	sext           reduce using rule 78
	'('            reduce using rule 78
	'{'            reduce using rule 78
	'}'            reduce using rule 78

	vars           goto state 74
	var_decl       goto state 75

State 60

	mode_decl -> mode Id '{' gfx_decl pal_decl types_decl state_decl main_decl func_decl . sprite_decl '}'    (rule 1)

	sprites        shift, and enter state 73

	sprite_decl    goto state 72

State 61

	func_decl -> funcs . '{' func_list '}'              (rule 30)

	'{'            shift, and enter state 71


State 62

	state_decl -> state '{' state_vars . '}'            (rule 25)

	'}'            shift, and enter state 70


State 63

	state_vars -> state_var . state_vars                (rule 27)

	id             shift, and enter state 64
	'}'            reduce using rule 26

	state_vars     goto state 69
	state_var      goto state 63

State 64

	state_var -> id . ':' type_state '=' expr           (rule 28)

	':'            shift, and enter state 68


State 65

	pal -> Id ':' pal_type . '=' '[' color_list ']'     (rule 10)

	'='            shift, and enter state 67


State 66

	pal_type -> spriteT .                               (rule 11)

	'='            reduce using rule 11


State 67

	pal -> Id ':' pal_type '=' . '[' color_list ']'     (rule 10)

	'['            shift, and enter state 164


State 68

	state_var -> id ':' . type_state '=' expr           (rule 28)

	Id             shift, and enter state 111
	bits           shift, and enter state 112
	range          shift, and enter state 113
	void           shift, and enter state 114

	type_state     goto state 162
	type_reg       goto state 163

State 69

	state_vars -> state_var state_vars .                (rule 27)

	'}'            reduce using rule 27


State 70

	state_decl -> state '{' state_vars '}' .            (rule 25)

	main           reduce using rule 25


State 71

	func_decl -> funcs '{' . func_list '}'              (rule 30)

	id             shift, and enter state 160
	idc            shift, and enter state 161
	'}'            reduce using rule 31

	func_list      goto state 158
	func           goto state 159

State 72

	mode_decl -> mode Id '{' gfx_decl pal_decl types_decl state_decl main_decl func_decl sprite_decl . '}'    (rule 1)

	'}'            shift, and enter state 157


State 73

	sprite_decl -> sprites . '{' sprite_list '}'        (rule 39)

	'{'            shift, and enter state 156


State 74

	expr -> '{' vars . exprs '}'                        (rule 53)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59
	'}'            reduce using rule 76

	expr           goto state 154
	lval           goto state 43
	exprs          goto state 155

State 75

	vars -> var_decl . vars                             (rule 79)

	int            reduce using rule 78
	rint           reduce using rule 78
	id             reduce using rule 78
	idc            reduce using rule 78
	Id             reduce using rule 78
	Idc            reduce using rule 78
	var            shift, and enter state 76
	void           reduce using rule 78
	if             reduce using rule 78
	for            reduce using rule 78
	match          reduce using rule 78
	trans          reduce using rule 78
	shrink         reduce using rule 78
	ext            reduce using rule 78
	sext           reduce using rule 78
	'('            reduce using rule 78
	'{'            reduce using rule 78
	'}'            reduce using rule 78

	vars           goto state 153
	var_decl       goto state 75

State 76

	var_decl -> var . id ':' type_reg '=' expr          (rule 80)

	id             shift, and enter state 152


State 77

	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)
	expr -> '(' expr . ')'                              (rule 72)

	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            shift, and enter state 99
	'|'            shift, and enter state 100
	'^'            shift, and enter state 101
	')'            shift, and enter state 151


State 78

	expr -> sext '[' . int ']' '(' expr ')'             (rule 64)

	int            shift, and enter state 150


State 79

	expr -> ext '[' . int ']' '(' expr ')'              (rule 63)

	int            shift, and enter state 149


State 80

	expr -> shrink '[' . int ']' '(' expr ')'           (rule 65)

	int            shift, and enter state 148


State 81

	expr -> trans '[' . int ',' int ']' '(' expr ')'    (rule 62)

	int            shift, and enter state 147


State 82

	expr -> match expr . with '{' cases '}'             (rule 61)
	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)

	with           shift, and enter state 146
	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            shift, and enter state 99
	'|'            shift, and enter state 100
	'^'            shift, and enter state 101


State 83

	expr -> for id . '=' expr to expr do expr           (rule 55)

	'='            shift, and enter state 145


State 84

	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)
	pred -> expr . comp expr                            (rule 96)

	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            shift, and enter state 99
	'|'            shift, and enter state 100
	'^'            shift, and enter state 101
	'='            shift, and enter state 135
	'/='           shift, and enter state 136
	'<'            shift, and enter state 137
	'>'            shift, and enter state 138
	'<='           shift, and enter state 139
	'>='           shift, and enter state 140
	'<$'           shift, and enter state 141
	'<=$'          shift, and enter state 142
	'>$'           shift, and enter state 143
	'>=$'          shift, and enter state 144

	comp           goto state 134

State 85

	expr -> if pred . then expr else expr               (rule 54)
	pred -> pred . and pred                             (rule 94)
	pred -> pred . or pred                              (rule 95)

	then           shift, and enter state 131
	and            shift, and enter state 132
	or             shift, and enter state 133


State 86

	pred -> true .                                      (rule 91)

	then           reduce using rule 91
	and            reduce using rule 91
	or             reduce using rule 91


State 87

	pred -> false .                                     (rule 92)

	then           reduce using rule 92
	and            reduce using rule 92
	or             reduce using rule 92


State 88

	pred -> not . pred                                  (rule 93)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	true           shift, and enter state 86
	false          shift, and enter state 87
	not            shift, and enter state 88
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	pressed        shift, and enter state 89
	holding        shift, and enter state 90
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 84
	lval           goto state 43
	pred           goto state 130

State 89

	pred -> pressed . '[' int ',' button ']'            (rule 97)

	'['            shift, and enter state 129


State 90

	pred -> holding . '[' int ',' button ']'            (rule 98)

	'['            shift, and enter state 128


State 91

	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)
	args -> expr .                                      (rule 82)
	args -> expr . ',' args                             (rule 83)

	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            shift, and enter state 99
	'|'            shift, and enter state 100
	'^'            shift, and enter state 101
	')'            reduce using rule 82
	','            shift, and enter state 127


State 92

	expr -> Idc args . ')'                              (rule 58)

	')'            shift, and enter state 126


State 93

	expr -> idc args . ')'                              (rule 57)

	')'            shift, and enter state 125


State 94

	lval -> id '[' . expr ']'                           (rule 75)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 124
	lval           goto state 43

State 95

	expr -> id '.' . idc args ')'                       (rule 60)

	idc            shift, and enter state 123


State 96

	expr -> lval '<-' . expr                            (rule 56)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 122
	lval           goto state 43

State 97

	expr -> expr '+' . expr                             (rule 66)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 121
	lval           goto state 43

State 98

	expr -> expr '-' . expr                             (rule 67)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 120
	lval           goto state 43

State 99

	expr -> expr '&' . expr                             (rule 68)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 119
	lval           goto state 43

State 100

	expr -> expr '|' . expr                             (rule 70)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 118
	lval           goto state 43

State 101

	expr -> expr '^' . expr                             (rule 69)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 117
	lval           goto state 43

State 102

	type -> Id '{' type_cases . '}'                     (rule 18)

	'}'            shift, and enter state 116


State 103

	type_cases -> type_case .                           (rule 19)
	type_cases -> type_case . ',' type_cases            (rule 20)

	'}'            reduce using rule 19
	','            shift, and enter state 115


State 104

	type_case -> Id .                                   (rule 21)

	'}'            reduce using rule 21
	','            reduce using rule 21


State 105

	type_case -> Idc . type_vars ')'                    (rule 22)

	Id             shift, and enter state 111
	bits           shift, and enter state 112
	range          shift, and enter state 113
	void           shift, and enter state 114

	type_vars      goto state 109
	type_reg       goto state 110

State 106

	gfx -> Id ':' gfx_type '=' str .                    (rule 5)

	Id             reduce using rule 5
	'}'            reduce using rule 5


State 107

	gfx_type -> spriteT '[' int . ']'                   (rule 6)

	']'            shift, and enter state 108


State 108

	gfx_type -> spriteT '[' int ']' .                   (rule 6)

	'='            reduce using rule 6


State 109

	type_case -> Idc type_vars . ')'                    (rule 22)

	')'            shift, and enter state 200


State 110

	type_vars -> type_reg .                             (rule 23)
	type_vars -> type_reg . ',' type_vars               (rule 24)

	')'            reduce using rule 23
	','            shift, and enter state 199


State 111

	type_reg -> Id .                                    (rule 124)

	int            reduce using rule 124
	rint           reduce using rule 124
	id             reduce using rule 124
	idc            reduce using rule 124
	Id             reduce using rule 124
	Idc            reduce using rule 124
	void           reduce using rule 124
	if             reduce using rule 124
	for            reduce using rule 124
	match          reduce using rule 124
	trans          reduce using rule 124
	shrink         reduce using rule 124
	ext            reduce using rule 124
	sext           reduce using rule 124
	'='            reduce using rule 124
	'('            reduce using rule 124
	')'            reduce using rule 124
	'{'            reduce using rule 124
	','            reduce using rule 124


State 112

	type_reg -> bits . '[' int ']'                      (rule 122)

	'['            shift, and enter state 198


State 113

	type_reg -> range . '[' int ',' int ']'             (rule 123)

	'['            shift, and enter state 197


State 114

	type_reg -> void .                                  (rule 125)

	int            reduce using rule 125
	rint           reduce using rule 125
	id             reduce using rule 125
	idc            reduce using rule 125
	Id             reduce using rule 125
	Idc            reduce using rule 125
	void           reduce using rule 125
	if             reduce using rule 125
	for            reduce using rule 125
	match          reduce using rule 125
	trans          reduce using rule 125
	shrink         reduce using rule 125
	ext            reduce using rule 125
	sext           reduce using rule 125
	'='            reduce using rule 125
	'('            reduce using rule 125
	')'            reduce using rule 125
	'{'            reduce using rule 125
	','            reduce using rule 125


State 115

	type_cases -> type_case ',' . type_cases            (rule 20)

	Id             shift, and enter state 104
	Idc            shift, and enter state 105

	type_cases     goto state 196
	type_case      goto state 103

State 116

	type -> Id '{' type_cases '}' .                     (rule 18)

	Id             reduce using rule 18
	'}'            reduce using rule 18


State 117

	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr '^' expr .                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)

	funcs          reduce using rule 69
	int            reduce using rule 69
	rint           reduce using rule 69
	id             reduce using rule 69
	idc            reduce using rule 69
	Id             reduce using rule 69
	Idc            reduce using rule 69
	var            reduce using rule 69
	void           reduce using rule 69
	if             reduce using rule 69
	then           reduce using rule 69
	else           reduce using rule 69
	for            reduce using rule 69
	to             reduce using rule 69
	do             reduce using rule 69
	match          reduce using rule 69
	with           reduce using rule 69
	and            reduce using rule 69
	or             reduce using rule 69
	trans          reduce using rule 69
	shrink         reduce using rule 69
	ext            reduce using rule 69
	sext           reduce using rule 69
	meths          reduce using rule 69
	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            shift, and enter state 99
	'|'            reduce using rule 69
	'^'            reduce using rule 69
	'='            reduce using rule 69
	'/='           reduce using rule 69
	'('            reduce using rule 69
	')'            reduce using rule 69
	'{'            reduce using rule 69
	'}'            reduce using rule 69
	']'            reduce using rule 69
	','            reduce using rule 69
	'<'            reduce using rule 69
	'>'            reduce using rule 69
	'<='           reduce using rule 69
	'>='           reduce using rule 69
	'<$'           reduce using rule 69
	'<=$'          reduce using rule 69
	'>$'           reduce using rule 69
	'>=$'          reduce using rule 69


State 118

	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)
	expr -> expr '|' expr .                             (rule 70)

	funcs          reduce using rule 70
	int            reduce using rule 70
	rint           reduce using rule 70
	id             reduce using rule 70
	idc            reduce using rule 70
	Id             reduce using rule 70
	Idc            reduce using rule 70
	var            reduce using rule 70
	void           reduce using rule 70
	if             reduce using rule 70
	then           reduce using rule 70
	else           reduce using rule 70
	for            reduce using rule 70
	to             reduce using rule 70
	do             reduce using rule 70
	match          reduce using rule 70
	with           reduce using rule 70
	and            reduce using rule 70
	or             reduce using rule 70
	trans          reduce using rule 70
	shrink         reduce using rule 70
	ext            reduce using rule 70
	sext           reduce using rule 70
	meths          reduce using rule 70
	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            shift, and enter state 99
	'|'            reduce using rule 70
	'^'            shift, and enter state 101
	'='            reduce using rule 70
	'/='           reduce using rule 70
	'('            reduce using rule 70
	')'            reduce using rule 70
	'{'            reduce using rule 70
	'}'            reduce using rule 70
	']'            reduce using rule 70
	','            reduce using rule 70
	'<'            reduce using rule 70
	'>'            reduce using rule 70
	'<='           reduce using rule 70
	'>='           reduce using rule 70
	'<$'           reduce using rule 70
	'<=$'          reduce using rule 70
	'>$'           reduce using rule 70
	'>=$'          reduce using rule 70


State 119

	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr '&' expr .                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)

	funcs          reduce using rule 68
	int            reduce using rule 68
	rint           reduce using rule 68
	id             reduce using rule 68
	idc            reduce using rule 68
	Id             reduce using rule 68
	Idc            reduce using rule 68
	var            reduce using rule 68
	void           reduce using rule 68
	if             reduce using rule 68
	then           reduce using rule 68
	else           reduce using rule 68
	for            reduce using rule 68
	to             reduce using rule 68
	do             reduce using rule 68
	match          reduce using rule 68
	with           reduce using rule 68
	and            reduce using rule 68
	or             reduce using rule 68
	trans          reduce using rule 68
	shrink         reduce using rule 68
	ext            reduce using rule 68
	sext           reduce using rule 68
	meths          reduce using rule 68
	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            reduce using rule 68
	'|'            reduce using rule 68
	'^'            reduce using rule 68
	'='            reduce using rule 68
	'/='           reduce using rule 68
	'('            reduce using rule 68
	')'            reduce using rule 68
	'{'            reduce using rule 68
	'}'            reduce using rule 68
	']'            reduce using rule 68
	','            reduce using rule 68
	'<'            reduce using rule 68
	'>'            reduce using rule 68
	'<='           reduce using rule 68
	'>='           reduce using rule 68
	'<$'           reduce using rule 68
	'<=$'          reduce using rule 68
	'>$'           reduce using rule 68
	'>=$'          reduce using rule 68


State 120

	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr '-' expr .                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)

	funcs          reduce using rule 67
	int            reduce using rule 67
	rint           reduce using rule 67
	id             reduce using rule 67
	idc            reduce using rule 67
	Id             reduce using rule 67
	Idc            reduce using rule 67
	var            reduce using rule 67
	void           reduce using rule 67
	if             reduce using rule 67
	then           reduce using rule 67
	else           reduce using rule 67
	for            reduce using rule 67
	to             reduce using rule 67
	do             reduce using rule 67
	match          reduce using rule 67
	with           reduce using rule 67
	and            reduce using rule 67
	or             reduce using rule 67
	trans          reduce using rule 67
	shrink         reduce using rule 67
	ext            reduce using rule 67
	sext           reduce using rule 67
	meths          reduce using rule 67
	'+'            reduce using rule 67
	'-'            reduce using rule 67
	'&'            reduce using rule 67
	'|'            reduce using rule 67
	'^'            reduce using rule 67
	'='            reduce using rule 67
	'/='           reduce using rule 67
	'('            reduce using rule 67
	')'            reduce using rule 67
	'{'            reduce using rule 67
	'}'            reduce using rule 67
	']'            reduce using rule 67
	','            reduce using rule 67
	'<'            reduce using rule 67
	'>'            reduce using rule 67
	'<='           reduce using rule 67
	'>='           reduce using rule 67
	'<$'           reduce using rule 67
	'<=$'          reduce using rule 67
	'>$'           reduce using rule 67
	'>=$'          reduce using rule 67


State 121

	expr -> expr . '+' expr                             (rule 66)
	expr -> expr '+' expr .                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)

	funcs          reduce using rule 66
	int            reduce using rule 66
	rint           reduce using rule 66
	id             reduce using rule 66
	idc            reduce using rule 66
	Id             reduce using rule 66
	Idc            reduce using rule 66
	var            reduce using rule 66
	void           reduce using rule 66
	if             reduce using rule 66
	then           reduce using rule 66
	else           reduce using rule 66
	for            reduce using rule 66
	to             reduce using rule 66
	do             reduce using rule 66
	match          reduce using rule 66
	with           reduce using rule 66
	and            reduce using rule 66
	or             reduce using rule 66
	trans          reduce using rule 66
	shrink         reduce using rule 66
	ext            reduce using rule 66
	sext           reduce using rule 66
	meths          reduce using rule 66
	'+'            reduce using rule 66
	'-'            reduce using rule 66
	'&'            reduce using rule 66
	'|'            reduce using rule 66
	'^'            reduce using rule 66
	'='            reduce using rule 66
	'/='           reduce using rule 66
	'('            reduce using rule 66
	')'            reduce using rule 66
	'{'            reduce using rule 66
	'}'            reduce using rule 66
	']'            reduce using rule 66
	','            reduce using rule 66
	'<'            reduce using rule 66
	'>'            reduce using rule 66
	'<='           reduce using rule 66
	'>='           reduce using rule 66
	'<$'           reduce using rule 66
	'<=$'          reduce using rule 66
	'>$'           reduce using rule 66
	'>=$'          reduce using rule 66


State 122

	expr -> lval '<-' expr .                            (rule 56)
	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)

	funcs          reduce using rule 56
	int            reduce using rule 56
	rint           reduce using rule 56
	id             reduce using rule 56
	idc            reduce using rule 56
	Id             reduce using rule 56
	Idc            reduce using rule 56
	var            reduce using rule 56
	void           reduce using rule 56
	if             reduce using rule 56
	then           reduce using rule 56
	else           reduce using rule 56
	for            reduce using rule 56
	to             reduce using rule 56
	do             reduce using rule 56
	match          reduce using rule 56
	with           reduce using rule 56
	and            reduce using rule 56
	or             reduce using rule 56
	trans          reduce using rule 56
	shrink         reduce using rule 56
	ext            reduce using rule 56
	sext           reduce using rule 56
	meths          reduce using rule 56
	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            shift, and enter state 99
	'|'            shift, and enter state 100
	'^'            shift, and enter state 101
	'='            reduce using rule 56
	'/='           reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'{'            reduce using rule 56
	'}'            reduce using rule 56
	']'            reduce using rule 56
	','            reduce using rule 56
	'<'            reduce using rule 56
	'>'            reduce using rule 56
	'<='           reduce using rule 56
	'>='           reduce using rule 56
	'<$'           reduce using rule 56
	'<=$'          reduce using rule 56
	'>$'           reduce using rule 56
	'>=$'          reduce using rule 56


State 123

	expr -> id '.' idc . args ')'                       (rule 60)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	')'            reduce using rule 81
	'{'            shift, and enter state 59

	expr           goto state 91
	lval           goto state 43
	args           goto state 195

State 124

	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)
	lval -> id '[' expr . ']'                           (rule 75)

	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            shift, and enter state 99
	'|'            shift, and enter state 100
	'^'            shift, and enter state 101
	']'            shift, and enter state 194


State 125

	expr -> idc args ')' .                              (rule 57)

	funcs          reduce using rule 57
	int            reduce using rule 57
	rint           reduce using rule 57
	id             reduce using rule 57
	idc            reduce using rule 57
	Id             reduce using rule 57
	Idc            reduce using rule 57
	var            reduce using rule 57
	void           reduce using rule 57
	if             reduce using rule 57
	then           reduce using rule 57
	else           reduce using rule 57
	for            reduce using rule 57
	to             reduce using rule 57
	do             reduce using rule 57
	match          reduce using rule 57
	with           reduce using rule 57
	and            reduce using rule 57
	or             reduce using rule 57
	trans          reduce using rule 57
	shrink         reduce using rule 57
	ext            reduce using rule 57
	sext           reduce using rule 57
	meths          reduce using rule 57
	'+'            reduce using rule 57
	'-'            reduce using rule 57
	'&'            reduce using rule 57
	'|'            reduce using rule 57
	'^'            reduce using rule 57
	'='            reduce using rule 57
	'/='           reduce using rule 57
	'('            reduce using rule 57
	')'            reduce using rule 57
	'{'            reduce using rule 57
	'}'            reduce using rule 57
	']'            reduce using rule 57
	','            reduce using rule 57
	'<'            reduce using rule 57
	'>'            reduce using rule 57
	'<='           reduce using rule 57
	'>='           reduce using rule 57
	'<$'           reduce using rule 57
	'<=$'          reduce using rule 57
	'>$'           reduce using rule 57
	'>=$'          reduce using rule 57


State 126

	expr -> Idc args ')' .                              (rule 58)

	funcs          reduce using rule 58
	int            reduce using rule 58
	rint           reduce using rule 58
	id             reduce using rule 58
	idc            reduce using rule 58
	Id             reduce using rule 58
	Idc            reduce using rule 58
	var            reduce using rule 58
	void           reduce using rule 58
	if             reduce using rule 58
	then           reduce using rule 58
	else           reduce using rule 58
	for            reduce using rule 58
	to             reduce using rule 58
	do             reduce using rule 58
	match          reduce using rule 58
	with           reduce using rule 58
	and            reduce using rule 58
	or             reduce using rule 58
	trans          reduce using rule 58
	shrink         reduce using rule 58
	ext            reduce using rule 58
	sext           reduce using rule 58
	meths          reduce using rule 58
	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'&'            reduce using rule 58
	'|'            reduce using rule 58
	'^'            reduce using rule 58
	'='            reduce using rule 58
	'/='           reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'{'            reduce using rule 58
	'}'            reduce using rule 58
	']'            reduce using rule 58
	','            reduce using rule 58
	'<'            reduce using rule 58
	'>'            reduce using rule 58
	'<='           reduce using rule 58
	'>='           reduce using rule 58
	'<$'           reduce using rule 58
	'<=$'          reduce using rule 58
	'>$'           reduce using rule 58
	'>=$'          reduce using rule 58


State 127

	args -> expr ',' . args                             (rule 83)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	')'            reduce using rule 81
	'{'            shift, and enter state 59

	expr           goto state 91
	lval           goto state 43
	args           goto state 193

State 128

	pred -> holding '[' . int ',' button ']'            (rule 98)

	int            shift, and enter state 192


State 129

	pred -> pressed '[' . int ',' button ']'            (rule 97)

	int            shift, and enter state 191


State 130

	pred -> not pred .                                  (rule 93)
	pred -> pred . and pred                             (rule 94)
	pred -> pred . or pred                              (rule 95)

	then           reduce using rule 93
	and            reduce using rule 93
	or             reduce using rule 93


State 131

	expr -> if pred then . expr else expr               (rule 54)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 190
	lval           goto state 43

State 132

	pred -> pred and . pred                             (rule 94)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	true           shift, and enter state 86
	false          shift, and enter state 87
	not            shift, and enter state 88
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	pressed        shift, and enter state 89
	holding        shift, and enter state 90
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 84
	lval           goto state 43
	pred           goto state 189

State 133

	pred -> pred or . pred                              (rule 95)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	true           shift, and enter state 86
	false          shift, and enter state 87
	not            shift, and enter state 88
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	pressed        shift, and enter state 89
	holding        shift, and enter state 90
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 84
	lval           goto state 43
	pred           goto state 188

State 134

	pred -> expr comp . expr                            (rule 96)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 187
	lval           goto state 43

State 135

	comp -> '=' .                                       (rule 99)

	int            reduce using rule 99
	rint           reduce using rule 99
	id             reduce using rule 99
	idc            reduce using rule 99
	Id             reduce using rule 99
	Idc            reduce using rule 99
	void           reduce using rule 99
	if             reduce using rule 99
	for            reduce using rule 99
	match          reduce using rule 99
	trans          reduce using rule 99
	shrink         reduce using rule 99
	ext            reduce using rule 99
	sext           reduce using rule 99
	'('            reduce using rule 99
	'{'            reduce using rule 99


State 136

	comp -> '/=' .                                      (rule 100)

	int            reduce using rule 100
	rint           reduce using rule 100
	id             reduce using rule 100
	idc            reduce using rule 100
	Id             reduce using rule 100
	Idc            reduce using rule 100
	void           reduce using rule 100
	if             reduce using rule 100
	for            reduce using rule 100
	match          reduce using rule 100
	trans          reduce using rule 100
	shrink         reduce using rule 100
	ext            reduce using rule 100
	sext           reduce using rule 100
	'('            reduce using rule 100
	'{'            reduce using rule 100


State 137

	comp -> '<' .                                       (rule 101)

	int            reduce using rule 101
	rint           reduce using rule 101
	id             reduce using rule 101
	idc            reduce using rule 101
	Id             reduce using rule 101
	Idc            reduce using rule 101
	void           reduce using rule 101
	if             reduce using rule 101
	for            reduce using rule 101
	match          reduce using rule 101
	trans          reduce using rule 101
	shrink         reduce using rule 101
	ext            reduce using rule 101
	sext           reduce using rule 101
	'('            reduce using rule 101
	'{'            reduce using rule 101


State 138

	comp -> '>' .                                       (rule 102)

	int            reduce using rule 102
	rint           reduce using rule 102
	id             reduce using rule 102
	idc            reduce using rule 102
	Id             reduce using rule 102
	Idc            reduce using rule 102
	void           reduce using rule 102
	if             reduce using rule 102
	for            reduce using rule 102
	match          reduce using rule 102
	trans          reduce using rule 102
	shrink         reduce using rule 102
	ext            reduce using rule 102
	sext           reduce using rule 102
	'('            reduce using rule 102
	'{'            reduce using rule 102


State 139

	comp -> '<=' .                                      (rule 103)

	int            reduce using rule 103
	rint           reduce using rule 103
	id             reduce using rule 103
	idc            reduce using rule 103
	Id             reduce using rule 103
	Idc            reduce using rule 103
	void           reduce using rule 103
	if             reduce using rule 103
	for            reduce using rule 103
	match          reduce using rule 103
	trans          reduce using rule 103
	shrink         reduce using rule 103
	ext            reduce using rule 103
	sext           reduce using rule 103
	'('            reduce using rule 103
	'{'            reduce using rule 103


State 140

	comp -> '>=' .                                      (rule 104)

	int            reduce using rule 104
	rint           reduce using rule 104
	id             reduce using rule 104
	idc            reduce using rule 104
	Id             reduce using rule 104
	Idc            reduce using rule 104
	void           reduce using rule 104
	if             reduce using rule 104
	for            reduce using rule 104
	match          reduce using rule 104
	trans          reduce using rule 104
	shrink         reduce using rule 104
	ext            reduce using rule 104
	sext           reduce using rule 104
	'('            reduce using rule 104
	'{'            reduce using rule 104


State 141

	comp -> '<$' .                                      (rule 105)

	int            reduce using rule 105
	rint           reduce using rule 105
	id             reduce using rule 105
	idc            reduce using rule 105
	Id             reduce using rule 105
	Idc            reduce using rule 105
	void           reduce using rule 105
	if             reduce using rule 105
	for            reduce using rule 105
	match          reduce using rule 105
	trans          reduce using rule 105
	shrink         reduce using rule 105
	ext            reduce using rule 105
	sext           reduce using rule 105
	'('            reduce using rule 105
	'{'            reduce using rule 105


State 142

	comp -> '<=$' .                                     (rule 107)

	int            reduce using rule 107
	rint           reduce using rule 107
	id             reduce using rule 107
	idc            reduce using rule 107
	Id             reduce using rule 107
	Idc            reduce using rule 107
	void           reduce using rule 107
	if             reduce using rule 107
	for            reduce using rule 107
	match          reduce using rule 107
	trans          reduce using rule 107
	shrink         reduce using rule 107
	ext            reduce using rule 107
	sext           reduce using rule 107
	'('            reduce using rule 107
	'{'            reduce using rule 107


State 143

	comp -> '>$' .                                      (rule 106)

	int            reduce using rule 106
	rint           reduce using rule 106
	id             reduce using rule 106
	idc            reduce using rule 106
	Id             reduce using rule 106
	Idc            reduce using rule 106
	void           reduce using rule 106
	if             reduce using rule 106
	for            reduce using rule 106
	match          reduce using rule 106
	trans          reduce using rule 106
	shrink         reduce using rule 106
	ext            reduce using rule 106
	sext           reduce using rule 106
	'('            reduce using rule 106
	'{'            reduce using rule 106


State 144

	comp -> '>=$' .                                     (rule 108)

	int            reduce using rule 108
	rint           reduce using rule 108
	id             reduce using rule 108
	idc            reduce using rule 108
	Id             reduce using rule 108
	Idc            reduce using rule 108
	void           reduce using rule 108
	if             reduce using rule 108
	for            reduce using rule 108
	match          reduce using rule 108
	trans          reduce using rule 108
	shrink         reduce using rule 108
	ext            reduce using rule 108
	sext           reduce using rule 108
	'('            reduce using rule 108
	'{'            reduce using rule 108


State 145

	expr -> for id '=' . expr to expr do expr           (rule 55)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 186
	lval           goto state 43

State 146

	expr -> match expr with . '{' cases '}'             (rule 61)

	'{'            shift, and enter state 185


State 147

	expr -> trans '[' int . ',' int ']' '(' expr ')'    (rule 62)

	','            shift, and enter state 184


State 148

	expr -> shrink '[' int . ']' '(' expr ')'           (rule 65)

	']'            shift, and enter state 183


State 149

	expr -> ext '[' int . ']' '(' expr ')'              (rule 63)

	']'            shift, and enter state 182


State 150

	expr -> sext '[' int . ']' '(' expr ')'             (rule 64)

	']'            shift, and enter state 181


State 151

	expr -> '(' expr ')' .                              (rule 72)

	funcs          reduce using rule 72
	int            reduce using rule 72
	rint           reduce using rule 72
	id             reduce using rule 72
	idc            reduce using rule 72
	Id             reduce using rule 72
	Idc            reduce using rule 72
	var            reduce using rule 72
	void           reduce using rule 72
	if             reduce using rule 72
	then           reduce using rule 72
	else           reduce using rule 72
	for            reduce using rule 72
	to             reduce using rule 72
	do             reduce using rule 72
	match          reduce using rule 72
	with           reduce using rule 72
	and            reduce using rule 72
	or             reduce using rule 72
	trans          reduce using rule 72
	shrink         reduce using rule 72
	ext            reduce using rule 72
	sext           reduce using rule 72
	meths          reduce using rule 72
	'+'            reduce using rule 72
	'-'            reduce using rule 72
	'&'            reduce using rule 72
	'|'            reduce using rule 72
	'^'            reduce using rule 72
	'='            reduce using rule 72
	'/='           reduce using rule 72
	'('            reduce using rule 72
	')'            reduce using rule 72
	'{'            reduce using rule 72
	'}'            reduce using rule 72
	']'            reduce using rule 72
	','            reduce using rule 72
	'<'            reduce using rule 72
	'>'            reduce using rule 72
	'<='           reduce using rule 72
	'>='           reduce using rule 72
	'<$'           reduce using rule 72
	'<=$'          reduce using rule 72
	'>$'           reduce using rule 72
	'>=$'          reduce using rule 72


State 152

	var_decl -> var id . ':' type_reg '=' expr          (rule 80)

	':'            shift, and enter state 180


State 153

	vars -> var_decl vars .                             (rule 79)

	int            reduce using rule 79
	rint           reduce using rule 79
	id             reduce using rule 79
	idc            reduce using rule 79
	Id             reduce using rule 79
	Idc            reduce using rule 79
	void           reduce using rule 79
	if             reduce using rule 79
	for            reduce using rule 79
	match          reduce using rule 79
	trans          reduce using rule 79
	shrink         reduce using rule 79
	ext            reduce using rule 79
	sext           reduce using rule 79
	'('            reduce using rule 79
	'{'            reduce using rule 79
	'}'            reduce using rule 79


State 154

	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)
	exprs -> expr . exprs                               (rule 77)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            shift, and enter state 99
	'|'            shift, and enter state 100
	'^'            shift, and enter state 101
	'('            shift, and enter state 58
	'{'            shift, and enter state 59
	'}'            reduce using rule 76

	expr           goto state 154
	lval           goto state 43
	exprs          goto state 179

State 155

	expr -> '{' vars exprs . '}'                        (rule 53)

	'}'            shift, and enter state 178


State 156

	sprite_decl -> sprites '{' . sprite_list '}'        (rule 39)

	Id             shift, and enter state 177
	'}'            reduce using rule 40

	sprite_list    goto state 175
	sprite         goto state 176

State 157

	mode_decl -> mode Id '{' gfx_decl pal_decl types_decl state_decl main_decl func_decl sprite_decl '}' .    (rule 1)

	%eof           reduce using rule 1


State 158

	func_decl -> funcs '{' func_list . '}'              (rule 30)

	'}'            shift, and enter state 174


State 159

	func_list -> func . func_list                       (rule 32)

	id             shift, and enter state 160
	idc            shift, and enter state 161
	'}'            reduce using rule 31

	func_list      goto state 173
	func           goto state 159

State 160

	func -> id . '(' params ')' ':' type_reg expr       (rule 33)

	'('            shift, and enter state 172


State 161

	func -> idc . params ')' ':' type_reg expr          (rule 34)

	id             shift, and enter state 171
	')'            reduce using rule 35

	params         goto state 169
	param          goto state 170

State 162

	state_var -> id ':' type_state . '=' expr           (rule 28)

	'='            shift, and enter state 168


State 163

	type_state -> type_reg .                            (rule 121)

	'='            reduce using rule 121


State 164

	pal -> Id ':' pal_type '=' '[' . color_list ']'     (rule 10)

	'('            shift, and enter state 167

	color_list     goto state 165
	color          goto state 166

State 165

	pal -> Id ':' pal_type '=' '[' color_list . ']'     (rule 10)

	']'            shift, and enter state 229


State 166

	color_list -> color .                               (rule 12)
	color_list -> color . ',' color_list                (rule 13)

	']'            reduce using rule 12
	','            shift, and enter state 228


State 167

	color -> '(' . int ',' int ',' int ')'              (rule 14)

	int            shift, and enter state 227


State 168

	state_var -> id ':' type_state '=' . expr           (rule 28)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 226
	lval           goto state 43

State 169

	func -> idc params . ')' ':' type_reg expr          (rule 34)

	')'            shift, and enter state 225


State 170

	params -> param .                                   (rule 36)
	params -> param . ',' params                        (rule 37)

	')'            reduce using rule 36
	','            shift, and enter state 224


State 171

	param -> id . ':' type_reg                          (rule 38)

	':'            shift, and enter state 223


State 172

	func -> id '(' . params ')' ':' type_reg expr       (rule 33)

	id             shift, and enter state 171
	')'            reduce using rule 35

	params         goto state 222
	param          goto state 170

State 173

	func_list -> func func_list .                       (rule 32)

	'}'            reduce using rule 32


State 174

	func_decl -> funcs '{' func_list '}' .              (rule 30)

	sprites        reduce using rule 30


State 175

	sprite_decl -> sprites '{' sprite_list . '}'        (rule 39)

	'}'            shift, and enter state 221


State 176

	sprite_list -> sprite . sprite_list                 (rule 41)

	Id             shift, and enter state 177
	'}'            reduce using rule 40

	sprite_list    goto state 220
	sprite         goto state 176

State 177

	sprite -> Id . '{' anim_decl state_decl main_decl meth_decl '}'    (rule 42)

	'{'            shift, and enter state 219


State 178

	expr -> '{' vars exprs '}' .                        (rule 53)

	funcs          reduce using rule 53
	int            reduce using rule 53
	rint           reduce using rule 53
	id             reduce using rule 53
	idc            reduce using rule 53
	Id             reduce using rule 53
	Idc            reduce using rule 53
	var            reduce using rule 53
	void           reduce using rule 53
	if             reduce using rule 53
	then           reduce using rule 53
	else           reduce using rule 53
	for            reduce using rule 53
	to             reduce using rule 53
	do             reduce using rule 53
	match          reduce using rule 53
	with           reduce using rule 53
	and            reduce using rule 53
	or             reduce using rule 53
	trans          reduce using rule 53
	shrink         reduce using rule 53
	ext            reduce using rule 53
	sext           reduce using rule 53
	meths          reduce using rule 53
	'+'            reduce using rule 53
	'-'            reduce using rule 53
	'&'            reduce using rule 53
	'|'            reduce using rule 53
	'^'            reduce using rule 53
	'='            reduce using rule 53
	'/='           reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'{'            reduce using rule 53
	'}'            reduce using rule 53
	']'            reduce using rule 53
	','            reduce using rule 53
	'<'            reduce using rule 53
	'>'            reduce using rule 53
	'<='           reduce using rule 53
	'>='           reduce using rule 53
	'<$'           reduce using rule 53
	'<=$'          reduce using rule 53
	'>$'           reduce using rule 53
	'>=$'          reduce using rule 53


State 179

	exprs -> expr exprs .                               (rule 77)

	'}'            reduce using rule 77


State 180

	var_decl -> var id ':' . type_reg '=' expr          (rule 80)

	Id             shift, and enter state 111
	bits           shift, and enter state 112
	range          shift, and enter state 113
	void           shift, and enter state 114

	type_reg       goto state 218

State 181

	expr -> sext '[' int ']' . '(' expr ')'             (rule 64)

	'('            shift, and enter state 217


State 182

	expr -> ext '[' int ']' . '(' expr ')'              (rule 63)

	'('            shift, and enter state 216


State 183

	expr -> shrink '[' int ']' . '(' expr ')'           (rule 65)

	'('            shift, and enter state 215


State 184

	expr -> trans '[' int ',' . int ']' '(' expr ')'    (rule 62)

	int            shift, and enter state 214


State 185

	expr -> match expr with '{' . cases '}'             (rule 61)

	Id             shift, and enter state 212
	Idc            shift, and enter state 213
	'}'            reduce using rule 84

	cases          goto state 209
	case           goto state 210
	pat            goto state 211

State 186

	expr -> for id '=' expr . to expr do expr           (rule 55)
	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)

	to             shift, and enter state 208
	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            shift, and enter state 99
	'|'            shift, and enter state 100
	'^'            shift, and enter state 101


State 187

	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)
	pred -> expr comp expr .                            (rule 96)

	then           reduce using rule 96
	and            reduce using rule 96
	or             reduce using rule 96
	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            shift, and enter state 99
	'|'            shift, and enter state 100
	'^'            shift, and enter state 101


State 188

	pred -> pred . and pred                             (rule 94)
	pred -> pred . or pred                              (rule 95)
	pred -> pred or pred .                              (rule 95)

	then           reduce using rule 95
	and            shift, and enter state 132
	or             reduce using rule 95


State 189

	pred -> pred . and pred                             (rule 94)
	pred -> pred and pred .                             (rule 94)
	pred -> pred . or pred                              (rule 95)

	then           reduce using rule 94
	and            reduce using rule 94
	or             reduce using rule 94


State 190

	expr -> if pred then expr . else expr               (rule 54)
	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)

	else           shift, and enter state 207
	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            shift, and enter state 99
	'|'            shift, and enter state 100
	'^'            shift, and enter state 101


State 191

	pred -> pressed '[' int . ',' button ']'            (rule 97)

	','            shift, and enter state 206


State 192

	pred -> holding '[' int . ',' button ']'            (rule 98)

	','            shift, and enter state 205


State 193

	args -> expr ',' args .                             (rule 83)

	')'            reduce using rule 83


State 194

	lval -> id '[' expr ']' .                           (rule 75)

	'<-'           reduce using rule 75


State 195

	expr -> id '.' idc args . ')'                       (rule 60)

	')'            shift, and enter state 204


State 196

	type_cases -> type_case ',' type_cases .            (rule 20)

	'}'            reduce using rule 20


State 197

	type_reg -> range '[' . int ',' int ']'             (rule 123)

	int            shift, and enter state 203


State 198

	type_reg -> bits '[' . int ']'                      (rule 122)

	int            shift, and enter state 202


State 199

	type_vars -> type_reg ',' . type_vars               (rule 24)

	Id             shift, and enter state 111
	bits           shift, and enter state 112
	range          shift, and enter state 113
	void           shift, and enter state 114

	type_vars      goto state 201
	type_reg       goto state 110

State 200

	type_case -> Idc type_vars ')' .                    (rule 22)

	'}'            reduce using rule 22
	','            reduce using rule 22


State 201

	type_vars -> type_reg ',' type_vars .               (rule 24)

	')'            reduce using rule 24


State 202

	type_reg -> bits '[' int . ']'                      (rule 122)

	']'            shift, and enter state 265


State 203

	type_reg -> range '[' int . ',' int ']'             (rule 123)

	','            shift, and enter state 264


State 204

	expr -> id '.' idc args ')' .                       (rule 60)

	funcs          reduce using rule 60
	int            reduce using rule 60
	rint           reduce using rule 60
	id             reduce using rule 60
	idc            reduce using rule 60
	Id             reduce using rule 60
	Idc            reduce using rule 60
	var            reduce using rule 60
	void           reduce using rule 60
	if             reduce using rule 60
	then           reduce using rule 60
	else           reduce using rule 60
	for            reduce using rule 60
	to             reduce using rule 60
	do             reduce using rule 60
	match          reduce using rule 60
	with           reduce using rule 60
	and            reduce using rule 60
	or             reduce using rule 60
	trans          reduce using rule 60
	shrink         reduce using rule 60
	ext            reduce using rule 60
	sext           reduce using rule 60
	meths          reduce using rule 60
	'+'            reduce using rule 60
	'-'            reduce using rule 60
	'&'            reduce using rule 60
	'|'            reduce using rule 60
	'^'            reduce using rule 60
	'='            reduce using rule 60
	'/='           reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'{'            reduce using rule 60
	'}'            reduce using rule 60
	']'            reduce using rule 60
	','            reduce using rule 60
	'<'            reduce using rule 60
	'>'            reduce using rule 60
	'<='           reduce using rule 60
	'>='           reduce using rule 60
	'<$'           reduce using rule 60
	'<=$'          reduce using rule 60
	'>$'           reduce using rule 60
	'>=$'          reduce using rule 60


State 205

	pred -> holding '[' int ',' . button ']'            (rule 98)

	A              shift, and enter state 251
	X              shift, and enter state 252
	L              shift, and enter state 253
	R              shift, and enter state 254
	B              shift, and enter state 255
	Y              shift, and enter state 256
	SELECT         shift, and enter state 257
	START          shift, and enter state 258
	UP             shift, and enter state 259
	DOWN           shift, and enter state 260
	LEFT           shift, and enter state 261
	RIGHT          shift, and enter state 262

	button         goto state 263

State 206

	pred -> pressed '[' int ',' . button ']'            (rule 97)

	A              shift, and enter state 251
	X              shift, and enter state 252
	L              shift, and enter state 253
	R              shift, and enter state 254
	B              shift, and enter state 255
	Y              shift, and enter state 256
	SELECT         shift, and enter state 257
	START          shift, and enter state 258
	UP             shift, and enter state 259
	DOWN           shift, and enter state 260
	LEFT           shift, and enter state 261
	RIGHT          shift, and enter state 262

	button         goto state 250

State 207

	expr -> if pred then expr else . expr               (rule 54)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 249
	lval           goto state 43

State 208

	expr -> for id '=' expr to . expr do expr           (rule 55)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 248
	lval           goto state 43

State 209

	expr -> match expr with '{' cases . '}'             (rule 61)

	'}'            shift, and enter state 247


State 210

	cases -> case . cases                               (rule 85)

	Id             shift, and enter state 212
	Idc            shift, and enter state 213
	'}'            reduce using rule 84

	cases          goto state 246
	case           goto state 210
	pat            goto state 211

State 211

	case -> pat . '->' expr                             (rule 86)

	'->'           shift, and enter state 245


State 212

	pat -> Id .                                         (rule 87)

	'->'           reduce using rule 87


State 213

	pat -> Idc . pats ')'                               (rule 88)

	id             shift, and enter state 244

	pats           goto state 243

State 214

	expr -> trans '[' int ',' int . ']' '(' expr ')'    (rule 62)

	']'            shift, and enter state 242


State 215

	expr -> shrink '[' int ']' '(' . expr ')'           (rule 65)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 241
	lval           goto state 43

State 216

	expr -> ext '[' int ']' '(' . expr ')'              (rule 63)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 240
	lval           goto state 43

State 217

	expr -> sext '[' int ']' '(' . expr ')'             (rule 64)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 239
	lval           goto state 43

State 218

	var_decl -> var id ':' type_reg . '=' expr          (rule 80)

	'='            shift, and enter state 238


State 219

	sprite -> Id '{' . anim_decl state_decl main_decl meth_decl '}'    (rule 42)

	anims          shift, and enter state 237

	anim_decl      goto state 236

State 220

	sprite_list -> sprite sprite_list .                 (rule 41)

	'}'            reduce using rule 41


State 221

	sprite_decl -> sprites '{' sprite_list '}' .        (rule 39)

	'}'            reduce using rule 39


State 222

	func -> id '(' params . ')' ':' type_reg expr       (rule 33)

	')'            shift, and enter state 235


State 223

	param -> id ':' . type_reg                          (rule 38)

	Id             shift, and enter state 111
	bits           shift, and enter state 112
	range          shift, and enter state 113
	void           shift, and enter state 114

	type_reg       goto state 234

State 224

	params -> param ',' . params                        (rule 37)

	id             shift, and enter state 171
	')'            reduce using rule 35

	params         goto state 233
	param          goto state 170

State 225

	func -> idc params ')' . ':' type_reg expr          (rule 34)

	':'            shift, and enter state 232


State 226

	state_var -> id ':' type_state '=' expr .           (rule 28)
	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)

	id             reduce using rule 28
	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            shift, and enter state 99
	'|'            shift, and enter state 100
	'^'            shift, and enter state 101
	'}'            reduce using rule 28


State 227

	color -> '(' int . ',' int ',' int ')'              (rule 14)

	','            shift, and enter state 231


State 228

	color_list -> color ',' . color_list                (rule 13)

	'('            shift, and enter state 167

	color_list     goto state 230
	color          goto state 166

State 229

	pal -> Id ':' pal_type '=' '[' color_list ']' .     (rule 10)

	Id             reduce using rule 10
	'}'            reduce using rule 10


State 230

	color_list -> color ',' color_list .                (rule 13)

	']'            reduce using rule 13


State 231

	color -> '(' int ',' . int ',' int ')'              (rule 14)

	int            shift, and enter state 282


State 232

	func -> idc params ')' ':' . type_reg expr          (rule 34)

	Id             shift, and enter state 111
	bits           shift, and enter state 112
	range          shift, and enter state 113
	void           shift, and enter state 114

	type_reg       goto state 281

State 233

	params -> param ',' params .                        (rule 37)

	')'            reduce using rule 37


State 234

	param -> id ':' type_reg .                          (rule 38)

	')'            reduce using rule 38
	','            reduce using rule 38


State 235

	func -> id '(' params ')' . ':' type_reg expr       (rule 33)

	':'            shift, and enter state 280


State 236

	sprite -> Id '{' anim_decl . state_decl main_decl meth_decl '}'    (rule 42)

	state          shift, and enter state 22

	state_decl     goto state 279

State 237

	anim_decl -> anims . '{' anim_list '}'              (rule 43)

	'{'            shift, and enter state 278


State 238

	var_decl -> var id ':' type_reg '=' . expr          (rule 80)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 277
	lval           goto state 43

State 239

	expr -> sext '[' int ']' '(' expr . ')'             (rule 64)
	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)

	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            shift, and enter state 99
	'|'            shift, and enter state 100
	'^'            shift, and enter state 101
	')'            shift, and enter state 276


State 240

	expr -> ext '[' int ']' '(' expr . ')'              (rule 63)
	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)

	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            shift, and enter state 99
	'|'            shift, and enter state 100
	'^'            shift, and enter state 101
	')'            shift, and enter state 275


State 241

	expr -> shrink '[' int ']' '(' expr . ')'           (rule 65)
	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)

	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            shift, and enter state 99
	'|'            shift, and enter state 100
	'^'            shift, and enter state 101
	')'            shift, and enter state 274


State 242

	expr -> trans '[' int ',' int ']' . '(' expr ')'    (rule 62)

	'('            shift, and enter state 273


State 243

	pat -> Idc pats . ')'                               (rule 88)

	')'            shift, and enter state 272


State 244

	pats -> id .                                        (rule 89)
	pats -> id . ',' pats                               (rule 90)

	')'            reduce using rule 89
	','            shift, and enter state 271


State 245

	case -> pat '->' . expr                             (rule 86)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 270
	lval           goto state 43

State 246

	cases -> case cases .                               (rule 85)

	'}'            reduce using rule 85


State 247

	expr -> match expr with '{' cases '}' .             (rule 61)

	funcs          reduce using rule 61
	int            reduce using rule 61
	rint           reduce using rule 61
	id             reduce using rule 61
	idc            reduce using rule 61
	Id             reduce using rule 61
	Idc            reduce using rule 61
	var            reduce using rule 61
	void           reduce using rule 61
	if             reduce using rule 61
	then           reduce using rule 61
	else           reduce using rule 61
	for            reduce using rule 61
	to             reduce using rule 61
	do             reduce using rule 61
	match          reduce using rule 61
	with           reduce using rule 61
	and            reduce using rule 61
	or             reduce using rule 61
	trans          reduce using rule 61
	shrink         reduce using rule 61
	ext            reduce using rule 61
	sext           reduce using rule 61
	meths          reduce using rule 61
	'+'            reduce using rule 61
	'-'            reduce using rule 61
	'&'            reduce using rule 61
	'|'            reduce using rule 61
	'^'            reduce using rule 61
	'='            reduce using rule 61
	'/='           reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	'{'            reduce using rule 61
	'}'            reduce using rule 61
	']'            reduce using rule 61
	','            reduce using rule 61
	'<'            reduce using rule 61
	'>'            reduce using rule 61
	'<='           reduce using rule 61
	'>='           reduce using rule 61
	'<$'           reduce using rule 61
	'<=$'          reduce using rule 61
	'>$'           reduce using rule 61
	'>=$'          reduce using rule 61


State 248

	expr -> for id '=' expr to expr . do expr           (rule 55)
	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)

	do             shift, and enter state 269
	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            shift, and enter state 99
	'|'            shift, and enter state 100
	'^'            shift, and enter state 101


State 249

	expr -> if pred then expr else expr .               (rule 54)
	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)

	funcs          reduce using rule 54
	int            reduce using rule 54
	rint           reduce using rule 54
	id             reduce using rule 54
	idc            reduce using rule 54
	Id             reduce using rule 54
	Idc            reduce using rule 54
	var            reduce using rule 54
	void           reduce using rule 54
	if             reduce using rule 54
	then           reduce using rule 54
	else           reduce using rule 54
	for            reduce using rule 54
	to             reduce using rule 54
	do             reduce using rule 54
	match          reduce using rule 54
	with           reduce using rule 54
	and            reduce using rule 54
	or             reduce using rule 54
	trans          reduce using rule 54
	shrink         reduce using rule 54
	ext            reduce using rule 54
	sext           reduce using rule 54
	meths          reduce using rule 54
	'+'            reduce using rule 54
	'-'            reduce using rule 54
	'&'            reduce using rule 54
	'|'            reduce using rule 54
	'^'            reduce using rule 54
	'='            reduce using rule 54
	'/='           reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	'{'            reduce using rule 54
	'}'            reduce using rule 54
	']'            reduce using rule 54
	','            reduce using rule 54
	'<'            reduce using rule 54
	'>'            reduce using rule 54
	'<='           reduce using rule 54
	'>='           reduce using rule 54
	'<$'           reduce using rule 54
	'<=$'          reduce using rule 54
	'>$'           reduce using rule 54
	'>=$'          reduce using rule 54


State 250

	pred -> pressed '[' int ',' button . ']'            (rule 97)

	']'            shift, and enter state 268


State 251

	button -> A .                                       (rule 109)

	']'            reduce using rule 109


State 252

	button -> X .                                       (rule 110)

	']'            reduce using rule 110


State 253

	button -> L .                                       (rule 111)

	']'            reduce using rule 111


State 254

	button -> R .                                       (rule 112)

	']'            reduce using rule 112


State 255

	button -> B .                                       (rule 113)

	']'            reduce using rule 113


State 256

	button -> Y .                                       (rule 114)

	']'            reduce using rule 114


State 257

	button -> SELECT .                                  (rule 115)

	']'            reduce using rule 115


State 258

	button -> START .                                   (rule 116)

	']'            reduce using rule 116


State 259

	button -> UP .                                      (rule 117)

	']'            reduce using rule 117


State 260

	button -> DOWN .                                    (rule 118)

	']'            reduce using rule 118


State 261

	button -> LEFT .                                    (rule 119)

	']'            reduce using rule 119


State 262

	button -> RIGHT .                                   (rule 120)

	']'            reduce using rule 120


State 263

	pred -> holding '[' int ',' button . ']'            (rule 98)

	']'            shift, and enter state 267


State 264

	type_reg -> range '[' int ',' . int ']'             (rule 123)

	int            shift, and enter state 266


State 265

	type_reg -> bits '[' int ']' .                      (rule 122)

	int            reduce using rule 122
	rint           reduce using rule 122
	id             reduce using rule 122
	idc            reduce using rule 122
	Id             reduce using rule 122
	Idc            reduce using rule 122
	void           reduce using rule 122
	if             reduce using rule 122
	for            reduce using rule 122
	match          reduce using rule 122
	trans          reduce using rule 122
	shrink         reduce using rule 122
	ext            reduce using rule 122
	sext           reduce using rule 122
	'='            reduce using rule 122
	'('            reduce using rule 122
	')'            reduce using rule 122
	'{'            reduce using rule 122
	','            reduce using rule 122


State 266

	type_reg -> range '[' int ',' int . ']'             (rule 123)

	']'            shift, and enter state 293


State 267

	pred -> holding '[' int ',' button ']' .            (rule 98)

	then           reduce using rule 98
	and            reduce using rule 98
	or             reduce using rule 98


State 268

	pred -> pressed '[' int ',' button ']' .            (rule 97)

	then           reduce using rule 97
	and            reduce using rule 97
	or             reduce using rule 97


State 269

	expr -> for id '=' expr to expr do . expr           (rule 55)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 292
	lval           goto state 43

State 270

	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)
	case -> pat '->' expr .                             (rule 86)

	Id             reduce using rule 86
	Idc            reduce using rule 86
	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            shift, and enter state 99
	'|'            shift, and enter state 100
	'^'            shift, and enter state 101
	'}'            reduce using rule 86


State 271

	pats -> id ',' . pats                               (rule 90)

	id             shift, and enter state 244

	pats           goto state 291

State 272

	pat -> Idc pats ')' .                               (rule 88)

	'->'           reduce using rule 88


State 273

	expr -> trans '[' int ',' int ']' '(' . expr ')'    (rule 62)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 290
	lval           goto state 43

State 274

	expr -> shrink '[' int ']' '(' expr ')' .           (rule 65)

	funcs          reduce using rule 65
	int            reduce using rule 65
	rint           reduce using rule 65
	id             reduce using rule 65
	idc            reduce using rule 65
	Id             reduce using rule 65
	Idc            reduce using rule 65
	var            reduce using rule 65
	void           reduce using rule 65
	if             reduce using rule 65
	then           reduce using rule 65
	else           reduce using rule 65
	for            reduce using rule 65
	to             reduce using rule 65
	do             reduce using rule 65
	match          reduce using rule 65
	with           reduce using rule 65
	and            reduce using rule 65
	or             reduce using rule 65
	trans          reduce using rule 65
	shrink         reduce using rule 65
	ext            reduce using rule 65
	sext           reduce using rule 65
	meths          reduce using rule 65
	'+'            reduce using rule 65
	'-'            reduce using rule 65
	'&'            reduce using rule 65
	'|'            reduce using rule 65
	'^'            reduce using rule 65
	'='            reduce using rule 65
	'/='           reduce using rule 65
	'('            reduce using rule 65
	')'            reduce using rule 65
	'{'            reduce using rule 65
	'}'            reduce using rule 65
	']'            reduce using rule 65
	','            reduce using rule 65
	'<'            reduce using rule 65
	'>'            reduce using rule 65
	'<='           reduce using rule 65
	'>='           reduce using rule 65
	'<$'           reduce using rule 65
	'<=$'          reduce using rule 65
	'>$'           reduce using rule 65
	'>=$'          reduce using rule 65


State 275

	expr -> ext '[' int ']' '(' expr ')' .              (rule 63)

	funcs          reduce using rule 63
	int            reduce using rule 63
	rint           reduce using rule 63
	id             reduce using rule 63
	idc            reduce using rule 63
	Id             reduce using rule 63
	Idc            reduce using rule 63
	var            reduce using rule 63
	void           reduce using rule 63
	if             reduce using rule 63
	then           reduce using rule 63
	else           reduce using rule 63
	for            reduce using rule 63
	to             reduce using rule 63
	do             reduce using rule 63
	match          reduce using rule 63
	with           reduce using rule 63
	and            reduce using rule 63
	or             reduce using rule 63
	trans          reduce using rule 63
	shrink         reduce using rule 63
	ext            reduce using rule 63
	sext           reduce using rule 63
	meths          reduce using rule 63
	'+'            reduce using rule 63
	'-'            reduce using rule 63
	'&'            reduce using rule 63
	'|'            reduce using rule 63
	'^'            reduce using rule 63
	'='            reduce using rule 63
	'/='           reduce using rule 63
	'('            reduce using rule 63
	')'            reduce using rule 63
	'{'            reduce using rule 63
	'}'            reduce using rule 63
	']'            reduce using rule 63
	','            reduce using rule 63
	'<'            reduce using rule 63
	'>'            reduce using rule 63
	'<='           reduce using rule 63
	'>='           reduce using rule 63
	'<$'           reduce using rule 63
	'<=$'          reduce using rule 63
	'>$'           reduce using rule 63
	'>=$'          reduce using rule 63


State 276

	expr -> sext '[' int ']' '(' expr ')' .             (rule 64)

	funcs          reduce using rule 64
	int            reduce using rule 64
	rint           reduce using rule 64
	id             reduce using rule 64
	idc            reduce using rule 64
	Id             reduce using rule 64
	Idc            reduce using rule 64
	var            reduce using rule 64
	void           reduce using rule 64
	if             reduce using rule 64
	then           reduce using rule 64
	else           reduce using rule 64
	for            reduce using rule 64
	to             reduce using rule 64
	do             reduce using rule 64
	match          reduce using rule 64
	with           reduce using rule 64
	and            reduce using rule 64
	or             reduce using rule 64
	trans          reduce using rule 64
	shrink         reduce using rule 64
	ext            reduce using rule 64
	sext           reduce using rule 64
	meths          reduce using rule 64
	'+'            reduce using rule 64
	'-'            reduce using rule 64
	'&'            reduce using rule 64
	'|'            reduce using rule 64
	'^'            reduce using rule 64
	'='            reduce using rule 64
	'/='           reduce using rule 64
	'('            reduce using rule 64
	')'            reduce using rule 64
	'{'            reduce using rule 64
	'}'            reduce using rule 64
	']'            reduce using rule 64
	','            reduce using rule 64
	'<'            reduce using rule 64
	'>'            reduce using rule 64
	'<='           reduce using rule 64
	'>='           reduce using rule 64
	'<$'           reduce using rule 64
	'<=$'          reduce using rule 64
	'>$'           reduce using rule 64
	'>=$'          reduce using rule 64


State 277

	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)
	var_decl -> var id ':' type_reg '=' expr .          (rule 80)

	int            reduce using rule 80
	rint           reduce using rule 80
	id             reduce using rule 80
	idc            reduce using rule 80
	Id             reduce using rule 80
	Idc            reduce using rule 80
	var            reduce using rule 80
	void           reduce using rule 80
	if             reduce using rule 80
	for            reduce using rule 80
	match          reduce using rule 80
	trans          reduce using rule 80
	shrink         reduce using rule 80
	ext            reduce using rule 80
	sext           reduce using rule 80
	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            shift, and enter state 99
	'|'            shift, and enter state 100
	'^'            shift, and enter state 101
	'('            reduce using rule 80
	'{'            reduce using rule 80
	'}'            reduce using rule 80


State 278

	anim_decl -> anims '{' . anim_list '}'              (rule 43)

	Id             shift, and enter state 289
	'}'            reduce using rule 44

	anim_list      goto state 287
	anim           goto state 288

State 279

	sprite -> Id '{' anim_decl state_decl . main_decl meth_decl '}'    (rule 42)

	main           shift, and enter state 31

	main_decl      goto state 286

State 280

	func -> id '(' params ')' ':' . type_reg expr       (rule 33)

	Id             shift, and enter state 111
	bits           shift, and enter state 112
	range          shift, and enter state 113
	void           shift, and enter state 114

	type_reg       goto state 285

State 281

	func -> idc params ')' ':' type_reg . expr          (rule 34)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 284
	lval           goto state 43

State 282

	color -> '(' int ',' int . ',' int ')'              (rule 14)

	','            shift, and enter state 283


State 283

	color -> '(' int ',' int ',' . int ')'              (rule 14)

	int            shift, and enter state 301


State 284

	func -> idc params ')' ':' type_reg expr .          (rule 34)
	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)

	id             reduce using rule 34
	idc            reduce using rule 34
	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            shift, and enter state 99
	'|'            shift, and enter state 100
	'^'            shift, and enter state 101
	'}'            reduce using rule 34


State 285

	func -> id '(' params ')' ':' type_reg . expr       (rule 33)

	int            shift, and enter state 44
	rint           shift, and enter state 45
	id             shift, and enter state 46
	idc            shift, and enter state 47
	Id             shift, and enter state 48
	Idc            shift, and enter state 49
	void           shift, and enter state 50
	if             shift, and enter state 51
	for            shift, and enter state 52
	match          shift, and enter state 53
	trans          shift, and enter state 54
	shrink         shift, and enter state 55
	ext            shift, and enter state 56
	sext           shift, and enter state 57
	'('            shift, and enter state 58
	'{'            shift, and enter state 59

	expr           goto state 300
	lval           goto state 43

State 286

	sprite -> Id '{' anim_decl state_decl main_decl . meth_decl '}'    (rule 42)

	meths          shift, and enter state 299

	meth_decl      goto state 298

State 287

	anim_decl -> anims '{' anim_list . '}'              (rule 43)

	'}'            shift, and enter state 297


State 288

	anim_list -> anim . anim_list                       (rule 45)

	Id             shift, and enter state 289
	'}'            reduce using rule 44

	anim_list      goto state 296
	anim           goto state 288

State 289

	anim -> Id . '{' tile_list '}'                      (rule 46)

	'{'            shift, and enter state 295


State 290

	expr -> trans '[' int ',' int ']' '(' expr . ')'    (rule 62)
	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)

	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            shift, and enter state 99
	'|'            shift, and enter state 100
	'^'            shift, and enter state 101
	')'            shift, and enter state 294


State 291

	pats -> id ',' pats .                               (rule 90)

	')'            reduce using rule 90


State 292

	expr -> for id '=' expr to expr do expr .           (rule 55)
	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)

	funcs          reduce using rule 55
	int            reduce using rule 55
	rint           reduce using rule 55
	id             reduce using rule 55
	idc            reduce using rule 55
	Id             reduce using rule 55
	Idc            reduce using rule 55
	var            reduce using rule 55
	void           reduce using rule 55
	if             reduce using rule 55
	then           reduce using rule 55
	else           reduce using rule 55
	for            reduce using rule 55
	to             reduce using rule 55
	do             reduce using rule 55
	match          reduce using rule 55
	with           reduce using rule 55
	and            reduce using rule 55
	or             reduce using rule 55
	trans          reduce using rule 55
	shrink         reduce using rule 55
	ext            reduce using rule 55
	sext           reduce using rule 55
	meths          reduce using rule 55
	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'&'            reduce using rule 55
	'|'            reduce using rule 55
	'^'            reduce using rule 55
	'='            reduce using rule 55
	'/='           reduce using rule 55
	'('            reduce using rule 55
	')'            reduce using rule 55
	'{'            reduce using rule 55
	'}'            reduce using rule 55
	']'            reduce using rule 55
	','            reduce using rule 55
	'<'            reduce using rule 55
	'>'            reduce using rule 55
	'<='           reduce using rule 55
	'>='           reduce using rule 55
	'<$'           reduce using rule 55
	'<=$'          reduce using rule 55
	'>$'           reduce using rule 55
	'>=$'          reduce using rule 55


State 293

	type_reg -> range '[' int ',' int ']' .             (rule 123)

	int            reduce using rule 123
	rint           reduce using rule 123
	id             reduce using rule 123
	idc            reduce using rule 123
	Id             reduce using rule 123
	Idc            reduce using rule 123
	void           reduce using rule 123
	if             reduce using rule 123
	for            reduce using rule 123
	match          reduce using rule 123
	trans          reduce using rule 123
	shrink         reduce using rule 123
	ext            reduce using rule 123
	sext           reduce using rule 123
	'='            reduce using rule 123
	'('            reduce using rule 123
	')'            reduce using rule 123
	'{'            reduce using rule 123
	','            reduce using rule 123


State 294

	expr -> trans '[' int ',' int ']' '(' expr ')' .    (rule 62)

	funcs          reduce using rule 62
	int            reduce using rule 62
	rint           reduce using rule 62
	id             reduce using rule 62
	idc            reduce using rule 62
	Id             reduce using rule 62
	Idc            reduce using rule 62
	var            reduce using rule 62
	void           reduce using rule 62
	if             reduce using rule 62
	then           reduce using rule 62
	else           reduce using rule 62
	for            reduce using rule 62
	to             reduce using rule 62
	do             reduce using rule 62
	match          reduce using rule 62
	with           reduce using rule 62
	and            reduce using rule 62
	or             reduce using rule 62
	trans          reduce using rule 62
	shrink         reduce using rule 62
	ext            reduce using rule 62
	sext           reduce using rule 62
	meths          reduce using rule 62
	'+'            reduce using rule 62
	'-'            reduce using rule 62
	'&'            reduce using rule 62
	'|'            reduce using rule 62
	'^'            reduce using rule 62
	'='            reduce using rule 62
	'/='           reduce using rule 62
	'('            reduce using rule 62
	')'            reduce using rule 62
	'{'            reduce using rule 62
	'}'            reduce using rule 62
	']'            reduce using rule 62
	','            reduce using rule 62
	'<'            reduce using rule 62
	'>'            reduce using rule 62
	'<='           reduce using rule 62
	'>='           reduce using rule 62
	'<$'           reduce using rule 62
	'<=$'          reduce using rule 62
	'>$'           reduce using rule 62
	'>=$'          reduce using rule 62


State 295

	anim -> Id '{' . tile_list '}'                      (rule 46)

	at             shift, and enter state 307

	tile_list      goto state 305
	tile           goto state 306

State 296

	anim_list -> anim anim_list .                       (rule 45)

	'}'            reduce using rule 45


State 297

	anim_decl -> anims '{' anim_list '}' .              (rule 43)

	state          reduce using rule 43


State 298

	sprite -> Id '{' anim_decl state_decl main_decl meth_decl . '}'    (rule 42)

	'}'            shift, and enter state 304


State 299

	meth_decl -> meths . '{' func_list '}'              (rule 50)

	'{'            shift, and enter state 303


State 300

	func -> id '(' params ')' ':' type_reg expr .       (rule 33)
	expr -> expr . '+' expr                             (rule 66)
	expr -> expr . '-' expr                             (rule 67)
	expr -> expr . '&' expr                             (rule 68)
	expr -> expr . '^' expr                             (rule 69)
	expr -> expr . '|' expr                             (rule 70)

	id             reduce using rule 33
	idc            reduce using rule 33
	'+'            shift, and enter state 97
	'-'            shift, and enter state 98
	'&'            shift, and enter state 99
	'|'            shift, and enter state 100
	'^'            shift, and enter state 101
	'}'            reduce using rule 33


State 301

	color -> '(' int ',' int ',' int . ')'              (rule 14)

	')'            shift, and enter state 302


State 302

	color -> '(' int ',' int ',' int ')' .              (rule 14)

	']'            reduce using rule 14
	','            reduce using rule 14


State 303

	meth_decl -> meths '{' . func_list '}'              (rule 50)

	id             shift, and enter state 160
	idc            shift, and enter state 161
	'}'            reduce using rule 31

	func_list      goto state 311
	func           goto state 159

State 304

	sprite -> Id '{' anim_decl state_decl main_decl meth_decl '}' .    (rule 42)

	Id             reduce using rule 42
	'}'            reduce using rule 42


State 305

	anim -> Id '{' tile_list . '}'                      (rule 46)

	'}'            shift, and enter state 310


State 306

	tile_list -> tile .                                 (rule 47)
	tile_list -> tile . tile_list                       (rule 48)

	at             shift, and enter state 307
	'}'            reduce using rule 47

	tile_list      goto state 309
	tile           goto state 306

State 307

	tile -> at . '(' int ',' int ')' ':' Id '[' int ']' in Id    (rule 49)

	'('            shift, and enter state 308


State 308

	tile -> at '(' . int ',' int ')' ':' Id '[' int ']' in Id    (rule 49)

	int            shift, and enter state 313


State 309

	tile_list -> tile tile_list .                       (rule 48)

	'}'            reduce using rule 48


State 310

	anim -> Id '{' tile_list '}' .                      (rule 46)

	Id             reduce using rule 46
	'}'            reduce using rule 46


State 311

	meth_decl -> meths '{' func_list . '}'              (rule 50)

	'}'            shift, and enter state 312


State 312

	meth_decl -> meths '{' func_list '}' .              (rule 50)

	'}'            reduce using rule 50


State 313

	tile -> at '(' int . ',' int ')' ':' Id '[' int ']' in Id    (rule 49)

	','            shift, and enter state 314


State 314

	tile -> at '(' int ',' . int ')' ':' Id '[' int ']' in Id    (rule 49)

	int            shift, and enter state 315


State 315

	tile -> at '(' int ',' int . ')' ':' Id '[' int ']' in Id    (rule 49)

	')'            shift, and enter state 316


State 316

	tile -> at '(' int ',' int ')' . ':' Id '[' int ']' in Id    (rule 49)

	':'            shift, and enter state 317


State 317

	tile -> at '(' int ',' int ')' ':' . Id '[' int ']' in Id    (rule 49)

	Id             shift, and enter state 318


State 318

	tile -> at '(' int ',' int ')' ':' Id . '[' int ']' in Id    (rule 49)

	'['            shift, and enter state 319


State 319

	tile -> at '(' int ',' int ')' ':' Id '[' . int ']' in Id    (rule 49)

	int            shift, and enter state 320


State 320

	tile -> at '(' int ',' int ')' ':' Id '[' int . ']' in Id    (rule 49)

	']'            shift, and enter state 321


State 321

	tile -> at '(' int ',' int ')' ':' Id '[' int ']' . in Id    (rule 49)

	in             shift, and enter state 322


State 322

	tile -> at '(' int ',' int ')' ':' Id '[' int ']' in . Id    (rule 49)

	Id             shift, and enter state 323


State 323

	tile -> at '(' int ',' int ')' ':' Id '[' int ']' in Id .    (rule 49)

	at             reduce using rule 49
	'}'            reduce using rule 49


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 126
Number of terminals: 82
Number of non-terminals: 51
Number of states: 324
