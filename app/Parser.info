-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Parser.y
-----------------------------------------------------------------------------


terminal '_' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parse -> mode_decl                          (0)
	mode_decl -> mode Id '{' pal_decl types_decl state_decl main_decl func_decl '}'   (1)
	pal_decl -> palettes '{' pal_list '}'              (2)
	pal_list ->                                        (3)
	pal_list -> pal pal_list                           (4)
	pal -> Id ':' pal_type '=' '[' color_list ']'      (5)
	pal_type -> sprite                                 (6)
	color_list -> color                                (7)
	color_list -> color ',' color_list                 (8)
	color -> '(' int ',' int ',' int ')'               (9)
	types_decl -> types '{' type_list '}'              (10)
	type_list ->                                       (11)
	type_list -> type type_list                        (12)
	type -> Id '{' type_cases '}'                      (13)
	type_cases -> type_case                            (14)
	type_cases -> type_case ',' type_cases             (15)
	type_case -> Id                                    (16)
	type_case -> Idc type_vars ')'                     (17)
	type_vars -> type_reg                              (18)
	type_vars -> type_reg ',' type_vars                (19)
	state_decl -> state '{' state_vars '}'             (20)
	state_vars ->                                      (21)
	state_vars -> state_var state_vars                 (22)
	state_var -> id ':' type_state '=' expr            (23)
	main_decl -> main expr                             (24)
	func_decl -> funcs '{' func_list '}'               (25)
	func_list ->                                       (26)
	func_list -> func func_list                        (27)
	func -> id '(' params ')' ':' type_reg expr        (28)
	func -> idc params ')' ':' type_reg expr           (29)
	params ->                                          (30)
	params -> param                                    (31)
	params -> param ',' params                         (32)
	param -> id ':' type_reg                           (33)
	expr -> int                                        (34)
	expr -> rint                                       (35)
	expr -> '{' vars exprs '}'                         (36)
	expr -> if pred then expr else expr                (37)
	expr -> for id '=' expr to expr do expr            (38)
	expr -> lval '<-' expr                             (39)
	expr -> idc args ')'                               (40)
	expr -> Idc args ')'                               (41)
	expr -> Id                                         (42)
	expr -> id '.' idc args ')'                        (43)
	expr -> match expr with '{' cases '}'              (44)
	expr -> trans '[' int ',' int ']' '(' expr ')'     (45)
	expr -> ext '[' int ']' '(' expr ')'               (46)
	expr -> sext '[' int ']' '(' expr ')'              (47)
	expr -> shrink '[' int ']' '(' expr ')'            (48)
	expr -> expr '+' expr                              (49)
	expr -> expr '-' expr                              (50)
	expr -> expr '&' expr                              (51)
	expr -> expr '^' expr                              (52)
	expr -> expr '|' expr                              (53)
	expr -> id                                         (54)
	expr -> '(' expr ')'                               (55)
	expr -> void                                       (56)
	lval -> id                                         (57)
	lval -> id '[' expr ']'                            (58)
	exprs ->                                           (59)
	exprs -> expr exprs                                (60)
	vars ->                                            (61)
	vars -> var_decl vars                              (62)
	var_decl -> var id ':' type_reg '=' expr           (63)
	args ->                                            (64)
	args -> expr                                       (65)
	args -> expr ',' args                              (66)
	cases ->                                           (67)
	cases -> case cases                                (68)
	case -> pat '->' expr                              (69)
	pat -> Id                                          (70)
	pat -> Idc pats ')'                                (71)
	pats -> id                                         (72)
	pats -> id ',' pats                                (73)
	pred -> true                                       (74)
	pred -> false                                      (75)
	pred -> not pred                                   (76)
	pred -> pred and pred                              (77)
	pred -> pred or pred                               (78)
	pred -> expr comp expr                             (79)
	pred -> pressed '[' int ',' button ']'             (80)
	pred -> holding '[' int ',' button ']'             (81)
	comp -> '='                                        (82)
	comp -> '/='                                       (83)
	comp -> '<'                                        (84)
	comp -> '>'                                        (85)
	comp -> '<='                                       (86)
	comp -> '>='                                       (87)
	comp -> '<$'                                       (88)
	comp -> '>$'                                       (89)
	comp -> '<=$'                                      (90)
	comp -> '>=$'                                      (91)
	button -> A                                        (92)
	button -> X                                        (93)
	button -> L                                        (94)
	button -> R                                        (95)
	button -> B                                        (96)
	button -> Y                                        (97)
	button -> SELECT                                   (98)
	button -> START                                    (99)
	button -> UP                                       (100)
	button -> DOWN                                     (101)
	button -> LEFT                                     (102)
	button -> RIGHT                                    (103)
	type_state -> type_reg                             (104)
	type_reg -> bits '[' int ']'                       (105)
	type_reg -> range '[' int ',' int ']'              (106)
	type_reg -> Id                                     (107)
	type_reg -> void                                   (108)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	mode           { TokenMode }
	state          { TokenState }
	main           { TokenMain }
	funcs          { TokenFunctions }
	types          { TokenTypes }
	int            { TokenInt $$ }
	rint           { TokenRInt $$ }
	id             { TokenId $$ }
	idc            { TokenIdC $$ }
	Id             { TokenCapId $$ }
	Idc            { TokenCapIdC $$ }
	var            { TokenVar }
	bits           { TokenBits }
	range          { TokenRange }
	void           { TokenVoid }
	if             { TokenIf }
	then           { TokenThen }
	else           { TokenElse }
	for            { TokenFor }
	to             { TokenTo }
	do             { TokenDo }
	match          { TokenMatch }
	with           { TokenWith }
	true           { TokenTrue }
	false          { TokenFalse }
	not            { TokenNot }
	and            { TokenAnd }
	or             { TokenOr }
	trans          { TokenTransmute }
	shrink         { TokenShrink }
	ext            { TokenExtend }
	sext           { TokenSignExtend }
	pressed        { TokenPressed }
	holding        { TokenHolding }
	A              { TokenButtonA }
	X              { TokenButtonX }
	L              { TokenButtonL }
	R              { TokenButtonR }
	B              { TokenButtonB }
	Y              { TokenButtonY }
	SELECT         { TokenButtonSELECT }
	START          { TokenButtonSTART }
	UP             { TokenButtonUP }
	DOWN           { TokenButtonDOWN }
	LEFT           { TokenButtonLEFT }
	RIGHT          { TokenButtonRIGHT }
	palettes       { TokenPalettes }
	sprite         { TokenSprite }
	'+'            { TokenPlus }
	'-'            { TokenMinus }
	'&'            { TokenAmphersand }
	'|'            { TokenPipe }
	'^'            { TokenCaret }
	'='            { TokenEq }
	'/='           { TokenNeq }
	'('            { TokenLParen }
	')'            { TokenRParen }
	'{'            { TokenLBrace }
	'}'            { TokenRBrace }
	'['            { TokenLBracket }
	']'            { TokenRBracket }
	':'            { TokenColon }
	','            { TokenComma }
	'.'            { TokenDot }
	'_'            { TokenUnderscore }
	'->'           { TokenRArrow }
	'<-'           { TokenLArrow }
	'<'            { TokenLe }
	'>'            { TokenGe }
	'<='           { TokenLeq }
	'>='           { TokenGeq }
	'<$'           { TokenLeS }
	'<=$'          { TokenLeqS }
	'>$'           { TokenGeS }
	'>=$'          { TokenGeqS }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parse    rule  0
	mode_decl       rule  1
	pal_decl        rule  2
	pal_list        rules 3, 4
	pal             rule  5
	pal_type        rule  6
	color_list      rules 7, 8
	color           rule  9
	types_decl      rule  10
	type_list       rules 11, 12
	type            rule  13
	type_cases      rules 14, 15
	type_case       rules 16, 17
	type_vars       rules 18, 19
	state_decl      rule  20
	state_vars      rules 21, 22
	state_var       rule  23
	main_decl       rule  24
	func_decl       rule  25
	func_list       rules 26, 27
	func            rules 28, 29
	params          rules 30, 31, 32
	param           rule  33
	expr            rules 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56
	lval            rules 57, 58
	exprs           rules 59, 60
	vars            rules 61, 62
	var_decl        rule  63
	args            rules 64, 65, 66
	cases           rules 67, 68
	case            rule  69
	pat             rules 70, 71
	pats            rules 72, 73
	pred            rules 74, 75, 76, 77, 78, 79, 80, 81
	comp            rules 82, 83, 84, 85, 86, 87, 88, 89, 90, 91
	button          rules 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103
	type_state      rule  104
	type_reg        rules 105, 106, 107, 108

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parse -> . mode_decl                         (rule 0)

	mode           shift, and enter state 2

	mode_decl      goto state 3

State 1

	mode_decl -> . mode Id '{' pal_decl types_decl state_decl main_decl func_decl '}'    (rule 1)

	mode           shift, and enter state 2


State 2

	mode_decl -> mode . Id '{' pal_decl types_decl state_decl main_decl func_decl '}'    (rule 1)

	Id             shift, and enter state 4


State 3

	%start_parse -> mode_decl .                         (rule 0)

	%eof           accept


State 4

	mode_decl -> mode Id . '{' pal_decl types_decl state_decl main_decl func_decl '}'    (rule 1)

	'{'            shift, and enter state 5


State 5

	mode_decl -> mode Id '{' . pal_decl types_decl state_decl main_decl func_decl '}'    (rule 1)

	palettes       shift, and enter state 7

	pal_decl       goto state 6

State 6

	mode_decl -> mode Id '{' pal_decl . types_decl state_decl main_decl func_decl '}'    (rule 1)

	types          shift, and enter state 10

	types_decl     goto state 9

State 7

	pal_decl -> palettes . '{' pal_list '}'             (rule 2)

	'{'            shift, and enter state 8


State 8

	pal_decl -> palettes '{' . pal_list '}'             (rule 2)

	Id             shift, and enter state 16
	'}'            reduce using rule 3

	pal_list       goto state 14
	pal            goto state 15

State 9

	mode_decl -> mode Id '{' pal_decl types_decl . state_decl main_decl func_decl '}'    (rule 1)

	state          shift, and enter state 13

	state_decl     goto state 12

State 10

	types_decl -> types . '{' type_list '}'             (rule 10)

	'{'            shift, and enter state 11


State 11

	types_decl -> types '{' . type_list '}'             (rule 10)

	Id             shift, and enter state 25
	'}'            reduce using rule 11

	type_list      goto state 23
	type           goto state 24

State 12

	mode_decl -> mode Id '{' pal_decl types_decl state_decl . main_decl func_decl '}'    (rule 1)

	main           shift, and enter state 22

	main_decl      goto state 21

State 13

	state_decl -> state . '{' state_vars '}'            (rule 20)

	'{'            shift, and enter state 20


State 14

	pal_decl -> palettes '{' pal_list . '}'             (rule 2)

	'}'            shift, and enter state 19


State 15

	pal_list -> pal . pal_list                          (rule 4)

	Id             shift, and enter state 16
	'}'            reduce using rule 3

	pal_list       goto state 18
	pal            goto state 15

State 16

	pal -> Id . ':' pal_type '=' '[' color_list ']'     (rule 5)

	':'            shift, and enter state 17


State 17

	pal -> Id ':' . pal_type '=' '[' color_list ']'     (rule 5)

	sprite         shift, and enter state 53

	pal_type       goto state 52

State 18

	pal_list -> pal pal_list .                          (rule 4)

	'}'            reduce using rule 4


State 19

	pal_decl -> palettes '{' pal_list '}' .             (rule 2)

	types          reduce using rule 2


State 20

	state_decl -> state '{' . state_vars '}'            (rule 20)

	id             shift, and enter state 51
	'}'            reduce using rule 21

	state_vars     goto state 49
	state_var      goto state 50

State 21

	mode_decl -> mode Id '{' pal_decl types_decl state_decl main_decl . func_decl '}'    (rule 1)

	funcs          shift, and enter state 48

	func_decl      goto state 47

State 22

	main_decl -> main . expr                            (rule 24)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 29
	lval           goto state 30

State 23

	types_decl -> types '{' type_list . '}'             (rule 10)

	'}'            shift, and enter state 28


State 24

	type_list -> type . type_list                       (rule 12)

	Id             shift, and enter state 25
	'}'            reduce using rule 11

	type_list      goto state 27
	type           goto state 24

State 25

	type -> Id . '{' type_cases '}'                     (rule 13)

	'{'            shift, and enter state 26


State 26

	type -> Id '{' . type_cases '}'                     (rule 13)

	Id             shift, and enter state 90
	Idc            shift, and enter state 91

	type_cases     goto state 88
	type_case      goto state 89

State 27

	type_list -> type type_list .                       (rule 12)

	'}'            reduce using rule 12


State 28

	types_decl -> types '{' type_list '}' .             (rule 10)

	state          reduce using rule 10


State 29

	main_decl -> main expr .                            (rule 24)
	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)

	funcs          reduce using rule 24
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            shift, and enter state 85
	'|'            shift, and enter state 86
	'^'            shift, and enter state 87


State 30

	expr -> lval . '<-' expr                            (rule 39)

	'<-'           shift, and enter state 82


State 31

	expr -> int .                                       (rule 34)

	funcs          reduce using rule 34
	int            reduce using rule 34
	rint           reduce using rule 34
	id             reduce using rule 34
	idc            reduce using rule 34
	Id             reduce using rule 34
	Idc            reduce using rule 34
	var            reduce using rule 34
	void           reduce using rule 34
	if             reduce using rule 34
	then           reduce using rule 34
	else           reduce using rule 34
	for            reduce using rule 34
	to             reduce using rule 34
	do             reduce using rule 34
	match          reduce using rule 34
	with           reduce using rule 34
	and            reduce using rule 34
	or             reduce using rule 34
	trans          reduce using rule 34
	shrink         reduce using rule 34
	ext            reduce using rule 34
	sext           reduce using rule 34
	'+'            reduce using rule 34
	'-'            reduce using rule 34
	'&'            reduce using rule 34
	'|'            reduce using rule 34
	'^'            reduce using rule 34
	'='            reduce using rule 34
	'/='           reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	']'            reduce using rule 34
	','            reduce using rule 34
	'<'            reduce using rule 34
	'>'            reduce using rule 34
	'<='           reduce using rule 34
	'>='           reduce using rule 34
	'<$'           reduce using rule 34
	'<=$'          reduce using rule 34
	'>$'           reduce using rule 34
	'>=$'          reduce using rule 34


State 32

	expr -> rint .                                      (rule 35)

	funcs          reduce using rule 35
	int            reduce using rule 35
	rint           reduce using rule 35
	id             reduce using rule 35
	idc            reduce using rule 35
	Id             reduce using rule 35
	Idc            reduce using rule 35
	var            reduce using rule 35
	void           reduce using rule 35
	if             reduce using rule 35
	then           reduce using rule 35
	else           reduce using rule 35
	for            reduce using rule 35
	to             reduce using rule 35
	do             reduce using rule 35
	match          reduce using rule 35
	with           reduce using rule 35
	and            reduce using rule 35
	or             reduce using rule 35
	trans          reduce using rule 35
	shrink         reduce using rule 35
	ext            reduce using rule 35
	sext           reduce using rule 35
	'+'            reduce using rule 35
	'-'            reduce using rule 35
	'&'            reduce using rule 35
	'|'            reduce using rule 35
	'^'            reduce using rule 35
	'='            reduce using rule 35
	'/='           reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	']'            reduce using rule 35
	','            reduce using rule 35
	'<'            reduce using rule 35
	'>'            reduce using rule 35
	'<='           reduce using rule 35
	'>='           reduce using rule 35
	'<$'           reduce using rule 35
	'<=$'          reduce using rule 35
	'>$'           reduce using rule 35
	'>=$'          reduce using rule 35


State 33

	expr -> id . '.' idc args ')'                       (rule 43)
	expr -> id .                                        (rule 54)
	lval -> id .                                        (rule 57)
	lval -> id . '[' expr ']'                           (rule 58)

	funcs          reduce using rule 54
	int            reduce using rule 54
	rint           reduce using rule 54
	id             reduce using rule 54
	idc            reduce using rule 54
	Id             reduce using rule 54
	Idc            reduce using rule 54
	var            reduce using rule 54
	void           reduce using rule 54
	if             reduce using rule 54
	then           reduce using rule 54
	else           reduce using rule 54
	for            reduce using rule 54
	to             reduce using rule 54
	do             reduce using rule 54
	match          reduce using rule 54
	with           reduce using rule 54
	and            reduce using rule 54
	or             reduce using rule 54
	trans          reduce using rule 54
	shrink         reduce using rule 54
	ext            reduce using rule 54
	sext           reduce using rule 54
	'+'            reduce using rule 54
	'-'            reduce using rule 54
	'&'            reduce using rule 54
	'|'            reduce using rule 54
	'^'            reduce using rule 54
	'='            reduce using rule 54
	'/='           reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	'{'            reduce using rule 54
	'}'            reduce using rule 54
	'['            shift, and enter state 80
	']'            reduce using rule 54
	','            reduce using rule 54
	'.'            shift, and enter state 81
	'<-'           reduce using rule 57
	'<'            reduce using rule 54
	'>'            reduce using rule 54
	'<='           reduce using rule 54
	'>='           reduce using rule 54
	'<$'           reduce using rule 54
	'<=$'          reduce using rule 54
	'>$'           reduce using rule 54
	'>=$'          reduce using rule 54


State 34

	expr -> idc . args ')'                              (rule 40)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	')'            reduce using rule 64
	'{'            shift, and enter state 46

	expr           goto state 77
	lval           goto state 30
	args           goto state 79

State 35

	expr -> Id .                                        (rule 42)

	funcs          reduce using rule 42
	int            reduce using rule 42
	rint           reduce using rule 42
	id             reduce using rule 42
	idc            reduce using rule 42
	Id             reduce using rule 42
	Idc            reduce using rule 42
	var            reduce using rule 42
	void           reduce using rule 42
	if             reduce using rule 42
	then           reduce using rule 42
	else           reduce using rule 42
	for            reduce using rule 42
	to             reduce using rule 42
	do             reduce using rule 42
	match          reduce using rule 42
	with           reduce using rule 42
	and            reduce using rule 42
	or             reduce using rule 42
	trans          reduce using rule 42
	shrink         reduce using rule 42
	ext            reduce using rule 42
	sext           reduce using rule 42
	'+'            reduce using rule 42
	'-'            reduce using rule 42
	'&'            reduce using rule 42
	'|'            reduce using rule 42
	'^'            reduce using rule 42
	'='            reduce using rule 42
	'/='           reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42
	']'            reduce using rule 42
	','            reduce using rule 42
	'<'            reduce using rule 42
	'>'            reduce using rule 42
	'<='           reduce using rule 42
	'>='           reduce using rule 42
	'<$'           reduce using rule 42
	'<=$'          reduce using rule 42
	'>$'           reduce using rule 42
	'>=$'          reduce using rule 42


State 36

	expr -> Idc . args ')'                              (rule 41)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	')'            reduce using rule 64
	'{'            shift, and enter state 46

	expr           goto state 77
	lval           goto state 30
	args           goto state 78

State 37

	expr -> void .                                      (rule 56)

	funcs          reduce using rule 56
	int            reduce using rule 56
	rint           reduce using rule 56
	id             reduce using rule 56
	idc            reduce using rule 56
	Id             reduce using rule 56
	Idc            reduce using rule 56
	var            reduce using rule 56
	void           reduce using rule 56
	if             reduce using rule 56
	then           reduce using rule 56
	else           reduce using rule 56
	for            reduce using rule 56
	to             reduce using rule 56
	do             reduce using rule 56
	match          reduce using rule 56
	with           reduce using rule 56
	and            reduce using rule 56
	or             reduce using rule 56
	trans          reduce using rule 56
	shrink         reduce using rule 56
	ext            reduce using rule 56
	sext           reduce using rule 56
	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'&'            reduce using rule 56
	'|'            reduce using rule 56
	'^'            reduce using rule 56
	'='            reduce using rule 56
	'/='           reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'{'            reduce using rule 56
	'}'            reduce using rule 56
	']'            reduce using rule 56
	','            reduce using rule 56
	'<'            reduce using rule 56
	'>'            reduce using rule 56
	'<='           reduce using rule 56
	'>='           reduce using rule 56
	'<$'           reduce using rule 56
	'<=$'          reduce using rule 56
	'>$'           reduce using rule 56
	'>=$'          reduce using rule 56


State 38

	expr -> if . pred then expr else expr               (rule 37)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	true           shift, and enter state 72
	false          shift, and enter state 73
	not            shift, and enter state 74
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	pressed        shift, and enter state 75
	holding        shift, and enter state 76
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 70
	lval           goto state 30
	pred           goto state 71

State 39

	expr -> for . id '=' expr to expr do expr           (rule 38)

	id             shift, and enter state 69


State 40

	expr -> match . expr with '{' cases '}'             (rule 44)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 68
	lval           goto state 30

State 41

	expr -> trans . '[' int ',' int ']' '(' expr ')'    (rule 45)

	'['            shift, and enter state 67


State 42

	expr -> shrink . '[' int ']' '(' expr ')'           (rule 48)

	'['            shift, and enter state 66


State 43

	expr -> ext . '[' int ']' '(' expr ')'              (rule 46)

	'['            shift, and enter state 65


State 44

	expr -> sext . '[' int ']' '(' expr ')'             (rule 47)

	'['            shift, and enter state 64


State 45

	expr -> '(' . expr ')'                              (rule 55)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 63
	lval           goto state 30

State 46

	expr -> '{' . vars exprs '}'                        (rule 36)

	int            reduce using rule 61
	rint           reduce using rule 61
	id             reduce using rule 61
	idc            reduce using rule 61
	Id             reduce using rule 61
	Idc            reduce using rule 61
	var            shift, and enter state 62
	void           reduce using rule 61
	if             reduce using rule 61
	for            reduce using rule 61
	match          reduce using rule 61
	trans          reduce using rule 61
	shrink         reduce using rule 61
	ext            reduce using rule 61
	sext           reduce using rule 61
	'('            reduce using rule 61
	'{'            reduce using rule 61
	'}'            reduce using rule 61

	vars           goto state 60
	var_decl       goto state 61

State 47

	mode_decl -> mode Id '{' pal_decl types_decl state_decl main_decl func_decl . '}'    (rule 1)

	'}'            shift, and enter state 59


State 48

	func_decl -> funcs . '{' func_list '}'              (rule 25)

	'{'            shift, and enter state 58


State 49

	state_decl -> state '{' state_vars . '}'            (rule 20)

	'}'            shift, and enter state 57


State 50

	state_vars -> state_var . state_vars                (rule 22)

	id             shift, and enter state 51
	'}'            reduce using rule 21

	state_vars     goto state 56
	state_var      goto state 50

State 51

	state_var -> id . ':' type_state '=' expr           (rule 23)

	':'            shift, and enter state 55


State 52

	pal -> Id ':' pal_type . '=' '[' color_list ']'     (rule 5)

	'='            shift, and enter state 54


State 53

	pal_type -> sprite .                                (rule 6)

	'='            reduce using rule 6


State 54

	pal -> Id ':' pal_type '=' . '[' color_list ']'     (rule 5)

	'['            shift, and enter state 145


State 55

	state_var -> id ':' . type_state '=' expr           (rule 23)

	Id             shift, and enter state 94
	bits           shift, and enter state 95
	range          shift, and enter state 96
	void           shift, and enter state 97

	type_state     goto state 143
	type_reg       goto state 144

State 56

	state_vars -> state_var state_vars .                (rule 22)

	'}'            reduce using rule 22


State 57

	state_decl -> state '{' state_vars '}' .            (rule 20)

	main           reduce using rule 20


State 58

	func_decl -> funcs '{' . func_list '}'              (rule 25)

	id             shift, and enter state 141
	idc            shift, and enter state 142
	'}'            reduce using rule 26

	func_list      goto state 139
	func           goto state 140

State 59

	mode_decl -> mode Id '{' pal_decl types_decl state_decl main_decl func_decl '}' .    (rule 1)

	%eof           reduce using rule 1


State 60

	expr -> '{' vars . exprs '}'                        (rule 36)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46
	'}'            reduce using rule 59

	expr           goto state 137
	lval           goto state 30
	exprs          goto state 138

State 61

	vars -> var_decl . vars                             (rule 62)

	int            reduce using rule 61
	rint           reduce using rule 61
	id             reduce using rule 61
	idc            reduce using rule 61
	Id             reduce using rule 61
	Idc            reduce using rule 61
	var            shift, and enter state 62
	void           reduce using rule 61
	if             reduce using rule 61
	for            reduce using rule 61
	match          reduce using rule 61
	trans          reduce using rule 61
	shrink         reduce using rule 61
	ext            reduce using rule 61
	sext           reduce using rule 61
	'('            reduce using rule 61
	'{'            reduce using rule 61
	'}'            reduce using rule 61

	vars           goto state 136
	var_decl       goto state 61

State 62

	var_decl -> var . id ':' type_reg '=' expr          (rule 63)

	id             shift, and enter state 135


State 63

	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)
	expr -> '(' expr . ')'                              (rule 55)

	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            shift, and enter state 85
	'|'            shift, and enter state 86
	'^'            shift, and enter state 87
	')'            shift, and enter state 134


State 64

	expr -> sext '[' . int ']' '(' expr ')'             (rule 47)

	int            shift, and enter state 133


State 65

	expr -> ext '[' . int ']' '(' expr ')'              (rule 46)

	int            shift, and enter state 132


State 66

	expr -> shrink '[' . int ']' '(' expr ')'           (rule 48)

	int            shift, and enter state 131


State 67

	expr -> trans '[' . int ',' int ']' '(' expr ')'    (rule 45)

	int            shift, and enter state 130


State 68

	expr -> match expr . with '{' cases '}'             (rule 44)
	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)

	with           shift, and enter state 129
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            shift, and enter state 85
	'|'            shift, and enter state 86
	'^'            shift, and enter state 87


State 69

	expr -> for id . '=' expr to expr do expr           (rule 38)

	'='            shift, and enter state 128


State 70

	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)
	pred -> expr . comp expr                            (rule 79)

	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            shift, and enter state 85
	'|'            shift, and enter state 86
	'^'            shift, and enter state 87
	'='            shift, and enter state 118
	'/='           shift, and enter state 119
	'<'            shift, and enter state 120
	'>'            shift, and enter state 121
	'<='           shift, and enter state 122
	'>='           shift, and enter state 123
	'<$'           shift, and enter state 124
	'<=$'          shift, and enter state 125
	'>$'           shift, and enter state 126
	'>=$'          shift, and enter state 127

	comp           goto state 117

State 71

	expr -> if pred . then expr else expr               (rule 37)
	pred -> pred . and pred                             (rule 77)
	pred -> pred . or pred                              (rule 78)

	then           shift, and enter state 114
	and            shift, and enter state 115
	or             shift, and enter state 116


State 72

	pred -> true .                                      (rule 74)

	then           reduce using rule 74
	and            reduce using rule 74
	or             reduce using rule 74


State 73

	pred -> false .                                     (rule 75)

	then           reduce using rule 75
	and            reduce using rule 75
	or             reduce using rule 75


State 74

	pred -> not . pred                                  (rule 76)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	true           shift, and enter state 72
	false          shift, and enter state 73
	not            shift, and enter state 74
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	pressed        shift, and enter state 75
	holding        shift, and enter state 76
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 70
	lval           goto state 30
	pred           goto state 113

State 75

	pred -> pressed . '[' int ',' button ']'            (rule 80)

	'['            shift, and enter state 112


State 76

	pred -> holding . '[' int ',' button ']'            (rule 81)

	'['            shift, and enter state 111


State 77

	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)
	args -> expr .                                      (rule 65)
	args -> expr . ',' args                             (rule 66)

	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            shift, and enter state 85
	'|'            shift, and enter state 86
	'^'            shift, and enter state 87
	')'            reduce using rule 65
	','            shift, and enter state 110


State 78

	expr -> Idc args . ')'                              (rule 41)

	')'            shift, and enter state 109


State 79

	expr -> idc args . ')'                              (rule 40)

	')'            shift, and enter state 108


State 80

	lval -> id '[' . expr ']'                           (rule 58)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 107
	lval           goto state 30

State 81

	expr -> id '.' . idc args ')'                       (rule 43)

	idc            shift, and enter state 106


State 82

	expr -> lval '<-' . expr                            (rule 39)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 105
	lval           goto state 30

State 83

	expr -> expr '+' . expr                             (rule 49)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 104
	lval           goto state 30

State 84

	expr -> expr '-' . expr                             (rule 50)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 103
	lval           goto state 30

State 85

	expr -> expr '&' . expr                             (rule 51)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 102
	lval           goto state 30

State 86

	expr -> expr '|' . expr                             (rule 53)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 101
	lval           goto state 30

State 87

	expr -> expr '^' . expr                             (rule 52)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 100
	lval           goto state 30

State 88

	type -> Id '{' type_cases . '}'                     (rule 13)

	'}'            shift, and enter state 99


State 89

	type_cases -> type_case .                           (rule 14)
	type_cases -> type_case . ',' type_cases            (rule 15)

	'}'            reduce using rule 14
	','            shift, and enter state 98


State 90

	type_case -> Id .                                   (rule 16)

	'}'            reduce using rule 16
	','            reduce using rule 16


State 91

	type_case -> Idc . type_vars ')'                    (rule 17)

	Id             shift, and enter state 94
	bits           shift, and enter state 95
	range          shift, and enter state 96
	void           shift, and enter state 97

	type_vars      goto state 92
	type_reg       goto state 93

State 92

	type_case -> Idc type_vars . ')'                    (rule 17)

	')'            shift, and enter state 178


State 93

	type_vars -> type_reg .                             (rule 18)
	type_vars -> type_reg . ',' type_vars               (rule 19)

	')'            reduce using rule 18
	','            shift, and enter state 177


State 94

	type_reg -> Id .                                    (rule 107)

	int            reduce using rule 107
	rint           reduce using rule 107
	id             reduce using rule 107
	idc            reduce using rule 107
	Id             reduce using rule 107
	Idc            reduce using rule 107
	void           reduce using rule 107
	if             reduce using rule 107
	for            reduce using rule 107
	match          reduce using rule 107
	trans          reduce using rule 107
	shrink         reduce using rule 107
	ext            reduce using rule 107
	sext           reduce using rule 107
	'='            reduce using rule 107
	'('            reduce using rule 107
	')'            reduce using rule 107
	'{'            reduce using rule 107
	','            reduce using rule 107


State 95

	type_reg -> bits . '[' int ']'                      (rule 105)

	'['            shift, and enter state 176


State 96

	type_reg -> range . '[' int ',' int ']'             (rule 106)

	'['            shift, and enter state 175


State 97

	type_reg -> void .                                  (rule 108)

	int            reduce using rule 108
	rint           reduce using rule 108
	id             reduce using rule 108
	idc            reduce using rule 108
	Id             reduce using rule 108
	Idc            reduce using rule 108
	void           reduce using rule 108
	if             reduce using rule 108
	for            reduce using rule 108
	match          reduce using rule 108
	trans          reduce using rule 108
	shrink         reduce using rule 108
	ext            reduce using rule 108
	sext           reduce using rule 108
	'='            reduce using rule 108
	'('            reduce using rule 108
	')'            reduce using rule 108
	'{'            reduce using rule 108
	','            reduce using rule 108


State 98

	type_cases -> type_case ',' . type_cases            (rule 15)

	Id             shift, and enter state 90
	Idc            shift, and enter state 91

	type_cases     goto state 174
	type_case      goto state 89

State 99

	type -> Id '{' type_cases '}' .                     (rule 13)

	Id             reduce using rule 13
	'}'            reduce using rule 13


State 100

	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr '^' expr .                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)

	funcs          reduce using rule 52
	int            reduce using rule 52
	rint           reduce using rule 52
	id             reduce using rule 52
	idc            reduce using rule 52
	Id             reduce using rule 52
	Idc            reduce using rule 52
	var            reduce using rule 52
	void           reduce using rule 52
	if             reduce using rule 52
	then           reduce using rule 52
	else           reduce using rule 52
	for            reduce using rule 52
	to             reduce using rule 52
	do             reduce using rule 52
	match          reduce using rule 52
	with           reduce using rule 52
	and            reduce using rule 52
	or             reduce using rule 52
	trans          reduce using rule 52
	shrink         reduce using rule 52
	ext            reduce using rule 52
	sext           reduce using rule 52
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            shift, and enter state 85
	'|'            reduce using rule 52
	'^'            reduce using rule 52
	'='            reduce using rule 52
	'/='           reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'{'            reduce using rule 52
	'}'            reduce using rule 52
	']'            reduce using rule 52
	','            reduce using rule 52
	'<'            reduce using rule 52
	'>'            reduce using rule 52
	'<='           reduce using rule 52
	'>='           reduce using rule 52
	'<$'           reduce using rule 52
	'<=$'          reduce using rule 52
	'>$'           reduce using rule 52
	'>=$'          reduce using rule 52


State 101

	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)
	expr -> expr '|' expr .                             (rule 53)

	funcs          reduce using rule 53
	int            reduce using rule 53
	rint           reduce using rule 53
	id             reduce using rule 53
	idc            reduce using rule 53
	Id             reduce using rule 53
	Idc            reduce using rule 53
	var            reduce using rule 53
	void           reduce using rule 53
	if             reduce using rule 53
	then           reduce using rule 53
	else           reduce using rule 53
	for            reduce using rule 53
	to             reduce using rule 53
	do             reduce using rule 53
	match          reduce using rule 53
	with           reduce using rule 53
	and            reduce using rule 53
	or             reduce using rule 53
	trans          reduce using rule 53
	shrink         reduce using rule 53
	ext            reduce using rule 53
	sext           reduce using rule 53
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            shift, and enter state 85
	'|'            reduce using rule 53
	'^'            shift, and enter state 87
	'='            reduce using rule 53
	'/='           reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'{'            reduce using rule 53
	'}'            reduce using rule 53
	']'            reduce using rule 53
	','            reduce using rule 53
	'<'            reduce using rule 53
	'>'            reduce using rule 53
	'<='           reduce using rule 53
	'>='           reduce using rule 53
	'<$'           reduce using rule 53
	'<=$'          reduce using rule 53
	'>$'           reduce using rule 53
	'>=$'          reduce using rule 53


State 102

	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr '&' expr .                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)

	funcs          reduce using rule 51
	int            reduce using rule 51
	rint           reduce using rule 51
	id             reduce using rule 51
	idc            reduce using rule 51
	Id             reduce using rule 51
	Idc            reduce using rule 51
	var            reduce using rule 51
	void           reduce using rule 51
	if             reduce using rule 51
	then           reduce using rule 51
	else           reduce using rule 51
	for            reduce using rule 51
	to             reduce using rule 51
	do             reduce using rule 51
	match          reduce using rule 51
	with           reduce using rule 51
	and            reduce using rule 51
	or             reduce using rule 51
	trans          reduce using rule 51
	shrink         reduce using rule 51
	ext            reduce using rule 51
	sext           reduce using rule 51
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            reduce using rule 51
	'|'            reduce using rule 51
	'^'            reduce using rule 51
	'='            reduce using rule 51
	'/='           reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'{'            reduce using rule 51
	'}'            reduce using rule 51
	']'            reduce using rule 51
	','            reduce using rule 51
	'<'            reduce using rule 51
	'>'            reduce using rule 51
	'<='           reduce using rule 51
	'>='           reduce using rule 51
	'<$'           reduce using rule 51
	'<=$'          reduce using rule 51
	'>$'           reduce using rule 51
	'>=$'          reduce using rule 51


State 103

	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr '-' expr .                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)

	funcs          reduce using rule 50
	int            reduce using rule 50
	rint           reduce using rule 50
	id             reduce using rule 50
	idc            reduce using rule 50
	Id             reduce using rule 50
	Idc            reduce using rule 50
	var            reduce using rule 50
	void           reduce using rule 50
	if             reduce using rule 50
	then           reduce using rule 50
	else           reduce using rule 50
	for            reduce using rule 50
	to             reduce using rule 50
	do             reduce using rule 50
	match          reduce using rule 50
	with           reduce using rule 50
	and            reduce using rule 50
	or             reduce using rule 50
	trans          reduce using rule 50
	shrink         reduce using rule 50
	ext            reduce using rule 50
	sext           reduce using rule 50
	'+'            reduce using rule 50
	'-'            reduce using rule 50
	'&'            reduce using rule 50
	'|'            reduce using rule 50
	'^'            reduce using rule 50
	'='            reduce using rule 50
	'/='           reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'{'            reduce using rule 50
	'}'            reduce using rule 50
	']'            reduce using rule 50
	','            reduce using rule 50
	'<'            reduce using rule 50
	'>'            reduce using rule 50
	'<='           reduce using rule 50
	'>='           reduce using rule 50
	'<$'           reduce using rule 50
	'<=$'          reduce using rule 50
	'>$'           reduce using rule 50
	'>=$'          reduce using rule 50


State 104

	expr -> expr . '+' expr                             (rule 49)
	expr -> expr '+' expr .                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)

	funcs          reduce using rule 49
	int            reduce using rule 49
	rint           reduce using rule 49
	id             reduce using rule 49
	idc            reduce using rule 49
	Id             reduce using rule 49
	Idc            reduce using rule 49
	var            reduce using rule 49
	void           reduce using rule 49
	if             reduce using rule 49
	then           reduce using rule 49
	else           reduce using rule 49
	for            reduce using rule 49
	to             reduce using rule 49
	do             reduce using rule 49
	match          reduce using rule 49
	with           reduce using rule 49
	and            reduce using rule 49
	or             reduce using rule 49
	trans          reduce using rule 49
	shrink         reduce using rule 49
	ext            reduce using rule 49
	sext           reduce using rule 49
	'+'            reduce using rule 49
	'-'            reduce using rule 49
	'&'            reduce using rule 49
	'|'            reduce using rule 49
	'^'            reduce using rule 49
	'='            reduce using rule 49
	'/='           reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'{'            reduce using rule 49
	'}'            reduce using rule 49
	']'            reduce using rule 49
	','            reduce using rule 49
	'<'            reduce using rule 49
	'>'            reduce using rule 49
	'<='           reduce using rule 49
	'>='           reduce using rule 49
	'<$'           reduce using rule 49
	'<=$'          reduce using rule 49
	'>$'           reduce using rule 49
	'>=$'          reduce using rule 49


State 105

	expr -> lval '<-' expr .                            (rule 39)
	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)

	funcs          reduce using rule 39
	int            reduce using rule 39
	rint           reduce using rule 39
	id             reduce using rule 39
	idc            reduce using rule 39
	Id             reduce using rule 39
	Idc            reduce using rule 39
	var            reduce using rule 39
	void           reduce using rule 39
	if             reduce using rule 39
	then           reduce using rule 39
	else           reduce using rule 39
	for            reduce using rule 39
	to             reduce using rule 39
	do             reduce using rule 39
	match          reduce using rule 39
	with           reduce using rule 39
	and            reduce using rule 39
	or             reduce using rule 39
	trans          reduce using rule 39
	shrink         reduce using rule 39
	ext            reduce using rule 39
	sext           reduce using rule 39
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            shift, and enter state 85
	'|'            shift, and enter state 86
	'^'            shift, and enter state 87
	'='            reduce using rule 39
	'/='           reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	']'            reduce using rule 39
	','            reduce using rule 39
	'<'            reduce using rule 39
	'>'            reduce using rule 39
	'<='           reduce using rule 39
	'>='           reduce using rule 39
	'<$'           reduce using rule 39
	'<=$'          reduce using rule 39
	'>$'           reduce using rule 39
	'>=$'          reduce using rule 39


State 106

	expr -> id '.' idc . args ')'                       (rule 43)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	')'            reduce using rule 64
	'{'            shift, and enter state 46

	expr           goto state 77
	lval           goto state 30
	args           goto state 173

State 107

	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)
	lval -> id '[' expr . ']'                           (rule 58)

	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            shift, and enter state 85
	'|'            shift, and enter state 86
	'^'            shift, and enter state 87
	']'            shift, and enter state 172


State 108

	expr -> idc args ')' .                              (rule 40)

	funcs          reduce using rule 40
	int            reduce using rule 40
	rint           reduce using rule 40
	id             reduce using rule 40
	idc            reduce using rule 40
	Id             reduce using rule 40
	Idc            reduce using rule 40
	var            reduce using rule 40
	void           reduce using rule 40
	if             reduce using rule 40
	then           reduce using rule 40
	else           reduce using rule 40
	for            reduce using rule 40
	to             reduce using rule 40
	do             reduce using rule 40
	match          reduce using rule 40
	with           reduce using rule 40
	and            reduce using rule 40
	or             reduce using rule 40
	trans          reduce using rule 40
	shrink         reduce using rule 40
	ext            reduce using rule 40
	sext           reduce using rule 40
	'+'            reduce using rule 40
	'-'            reduce using rule 40
	'&'            reduce using rule 40
	'|'            reduce using rule 40
	'^'            reduce using rule 40
	'='            reduce using rule 40
	'/='           reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40
	']'            reduce using rule 40
	','            reduce using rule 40
	'<'            reduce using rule 40
	'>'            reduce using rule 40
	'<='           reduce using rule 40
	'>='           reduce using rule 40
	'<$'           reduce using rule 40
	'<=$'          reduce using rule 40
	'>$'           reduce using rule 40
	'>=$'          reduce using rule 40


State 109

	expr -> Idc args ')' .                              (rule 41)

	funcs          reduce using rule 41
	int            reduce using rule 41
	rint           reduce using rule 41
	id             reduce using rule 41
	idc            reduce using rule 41
	Id             reduce using rule 41
	Idc            reduce using rule 41
	var            reduce using rule 41
	void           reduce using rule 41
	if             reduce using rule 41
	then           reduce using rule 41
	else           reduce using rule 41
	for            reduce using rule 41
	to             reduce using rule 41
	do             reduce using rule 41
	match          reduce using rule 41
	with           reduce using rule 41
	and            reduce using rule 41
	or             reduce using rule 41
	trans          reduce using rule 41
	shrink         reduce using rule 41
	ext            reduce using rule 41
	sext           reduce using rule 41
	'+'            reduce using rule 41
	'-'            reduce using rule 41
	'&'            reduce using rule 41
	'|'            reduce using rule 41
	'^'            reduce using rule 41
	'='            reduce using rule 41
	'/='           reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'{'            reduce using rule 41
	'}'            reduce using rule 41
	']'            reduce using rule 41
	','            reduce using rule 41
	'<'            reduce using rule 41
	'>'            reduce using rule 41
	'<='           reduce using rule 41
	'>='           reduce using rule 41
	'<$'           reduce using rule 41
	'<=$'          reduce using rule 41
	'>$'           reduce using rule 41
	'>=$'          reduce using rule 41


State 110

	args -> expr ',' . args                             (rule 66)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	')'            reduce using rule 64
	'{'            shift, and enter state 46

	expr           goto state 77
	lval           goto state 30
	args           goto state 171

State 111

	pred -> holding '[' . int ',' button ']'            (rule 81)

	int            shift, and enter state 170


State 112

	pred -> pressed '[' . int ',' button ']'            (rule 80)

	int            shift, and enter state 169


State 113

	pred -> not pred .                                  (rule 76)
	pred -> pred . and pred                             (rule 77)
	pred -> pred . or pred                              (rule 78)

	then           reduce using rule 76
	and            reduce using rule 76
	or             reduce using rule 76


State 114

	expr -> if pred then . expr else expr               (rule 37)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 168
	lval           goto state 30

State 115

	pred -> pred and . pred                             (rule 77)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	true           shift, and enter state 72
	false          shift, and enter state 73
	not            shift, and enter state 74
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	pressed        shift, and enter state 75
	holding        shift, and enter state 76
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 70
	lval           goto state 30
	pred           goto state 167

State 116

	pred -> pred or . pred                              (rule 78)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	true           shift, and enter state 72
	false          shift, and enter state 73
	not            shift, and enter state 74
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	pressed        shift, and enter state 75
	holding        shift, and enter state 76
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 70
	lval           goto state 30
	pred           goto state 166

State 117

	pred -> expr comp . expr                            (rule 79)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 165
	lval           goto state 30

State 118

	comp -> '=' .                                       (rule 82)

	int            reduce using rule 82
	rint           reduce using rule 82
	id             reduce using rule 82
	idc            reduce using rule 82
	Id             reduce using rule 82
	Idc            reduce using rule 82
	void           reduce using rule 82
	if             reduce using rule 82
	for            reduce using rule 82
	match          reduce using rule 82
	trans          reduce using rule 82
	shrink         reduce using rule 82
	ext            reduce using rule 82
	sext           reduce using rule 82
	'('            reduce using rule 82
	'{'            reduce using rule 82


State 119

	comp -> '/=' .                                      (rule 83)

	int            reduce using rule 83
	rint           reduce using rule 83
	id             reduce using rule 83
	idc            reduce using rule 83
	Id             reduce using rule 83
	Idc            reduce using rule 83
	void           reduce using rule 83
	if             reduce using rule 83
	for            reduce using rule 83
	match          reduce using rule 83
	trans          reduce using rule 83
	shrink         reduce using rule 83
	ext            reduce using rule 83
	sext           reduce using rule 83
	'('            reduce using rule 83
	'{'            reduce using rule 83


State 120

	comp -> '<' .                                       (rule 84)

	int            reduce using rule 84
	rint           reduce using rule 84
	id             reduce using rule 84
	idc            reduce using rule 84
	Id             reduce using rule 84
	Idc            reduce using rule 84
	void           reduce using rule 84
	if             reduce using rule 84
	for            reduce using rule 84
	match          reduce using rule 84
	trans          reduce using rule 84
	shrink         reduce using rule 84
	ext            reduce using rule 84
	sext           reduce using rule 84
	'('            reduce using rule 84
	'{'            reduce using rule 84


State 121

	comp -> '>' .                                       (rule 85)

	int            reduce using rule 85
	rint           reduce using rule 85
	id             reduce using rule 85
	idc            reduce using rule 85
	Id             reduce using rule 85
	Idc            reduce using rule 85
	void           reduce using rule 85
	if             reduce using rule 85
	for            reduce using rule 85
	match          reduce using rule 85
	trans          reduce using rule 85
	shrink         reduce using rule 85
	ext            reduce using rule 85
	sext           reduce using rule 85
	'('            reduce using rule 85
	'{'            reduce using rule 85


State 122

	comp -> '<=' .                                      (rule 86)

	int            reduce using rule 86
	rint           reduce using rule 86
	id             reduce using rule 86
	idc            reduce using rule 86
	Id             reduce using rule 86
	Idc            reduce using rule 86
	void           reduce using rule 86
	if             reduce using rule 86
	for            reduce using rule 86
	match          reduce using rule 86
	trans          reduce using rule 86
	shrink         reduce using rule 86
	ext            reduce using rule 86
	sext           reduce using rule 86
	'('            reduce using rule 86
	'{'            reduce using rule 86


State 123

	comp -> '>=' .                                      (rule 87)

	int            reduce using rule 87
	rint           reduce using rule 87
	id             reduce using rule 87
	idc            reduce using rule 87
	Id             reduce using rule 87
	Idc            reduce using rule 87
	void           reduce using rule 87
	if             reduce using rule 87
	for            reduce using rule 87
	match          reduce using rule 87
	trans          reduce using rule 87
	shrink         reduce using rule 87
	ext            reduce using rule 87
	sext           reduce using rule 87
	'('            reduce using rule 87
	'{'            reduce using rule 87


State 124

	comp -> '<$' .                                      (rule 88)

	int            reduce using rule 88
	rint           reduce using rule 88
	id             reduce using rule 88
	idc            reduce using rule 88
	Id             reduce using rule 88
	Idc            reduce using rule 88
	void           reduce using rule 88
	if             reduce using rule 88
	for            reduce using rule 88
	match          reduce using rule 88
	trans          reduce using rule 88
	shrink         reduce using rule 88
	ext            reduce using rule 88
	sext           reduce using rule 88
	'('            reduce using rule 88
	'{'            reduce using rule 88


State 125

	comp -> '<=$' .                                     (rule 90)

	int            reduce using rule 90
	rint           reduce using rule 90
	id             reduce using rule 90
	idc            reduce using rule 90
	Id             reduce using rule 90
	Idc            reduce using rule 90
	void           reduce using rule 90
	if             reduce using rule 90
	for            reduce using rule 90
	match          reduce using rule 90
	trans          reduce using rule 90
	shrink         reduce using rule 90
	ext            reduce using rule 90
	sext           reduce using rule 90
	'('            reduce using rule 90
	'{'            reduce using rule 90


State 126

	comp -> '>$' .                                      (rule 89)

	int            reduce using rule 89
	rint           reduce using rule 89
	id             reduce using rule 89
	idc            reduce using rule 89
	Id             reduce using rule 89
	Idc            reduce using rule 89
	void           reduce using rule 89
	if             reduce using rule 89
	for            reduce using rule 89
	match          reduce using rule 89
	trans          reduce using rule 89
	shrink         reduce using rule 89
	ext            reduce using rule 89
	sext           reduce using rule 89
	'('            reduce using rule 89
	'{'            reduce using rule 89


State 127

	comp -> '>=$' .                                     (rule 91)

	int            reduce using rule 91
	rint           reduce using rule 91
	id             reduce using rule 91
	idc            reduce using rule 91
	Id             reduce using rule 91
	Idc            reduce using rule 91
	void           reduce using rule 91
	if             reduce using rule 91
	for            reduce using rule 91
	match          reduce using rule 91
	trans          reduce using rule 91
	shrink         reduce using rule 91
	ext            reduce using rule 91
	sext           reduce using rule 91
	'('            reduce using rule 91
	'{'            reduce using rule 91


State 128

	expr -> for id '=' . expr to expr do expr           (rule 38)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 164
	lval           goto state 30

State 129

	expr -> match expr with . '{' cases '}'             (rule 44)

	'{'            shift, and enter state 163


State 130

	expr -> trans '[' int . ',' int ']' '(' expr ')'    (rule 45)

	','            shift, and enter state 162


State 131

	expr -> shrink '[' int . ']' '(' expr ')'           (rule 48)

	']'            shift, and enter state 161


State 132

	expr -> ext '[' int . ']' '(' expr ')'              (rule 46)

	']'            shift, and enter state 160


State 133

	expr -> sext '[' int . ']' '(' expr ')'             (rule 47)

	']'            shift, and enter state 159


State 134

	expr -> '(' expr ')' .                              (rule 55)

	funcs          reduce using rule 55
	int            reduce using rule 55
	rint           reduce using rule 55
	id             reduce using rule 55
	idc            reduce using rule 55
	Id             reduce using rule 55
	Idc            reduce using rule 55
	var            reduce using rule 55
	void           reduce using rule 55
	if             reduce using rule 55
	then           reduce using rule 55
	else           reduce using rule 55
	for            reduce using rule 55
	to             reduce using rule 55
	do             reduce using rule 55
	match          reduce using rule 55
	with           reduce using rule 55
	and            reduce using rule 55
	or             reduce using rule 55
	trans          reduce using rule 55
	shrink         reduce using rule 55
	ext            reduce using rule 55
	sext           reduce using rule 55
	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'&'            reduce using rule 55
	'|'            reduce using rule 55
	'^'            reduce using rule 55
	'='            reduce using rule 55
	'/='           reduce using rule 55
	'('            reduce using rule 55
	')'            reduce using rule 55
	'{'            reduce using rule 55
	'}'            reduce using rule 55
	']'            reduce using rule 55
	','            reduce using rule 55
	'<'            reduce using rule 55
	'>'            reduce using rule 55
	'<='           reduce using rule 55
	'>='           reduce using rule 55
	'<$'           reduce using rule 55
	'<=$'          reduce using rule 55
	'>$'           reduce using rule 55
	'>=$'          reduce using rule 55


State 135

	var_decl -> var id . ':' type_reg '=' expr          (rule 63)

	':'            shift, and enter state 158


State 136

	vars -> var_decl vars .                             (rule 62)

	int            reduce using rule 62
	rint           reduce using rule 62
	id             reduce using rule 62
	idc            reduce using rule 62
	Id             reduce using rule 62
	Idc            reduce using rule 62
	void           reduce using rule 62
	if             reduce using rule 62
	for            reduce using rule 62
	match          reduce using rule 62
	trans          reduce using rule 62
	shrink         reduce using rule 62
	ext            reduce using rule 62
	sext           reduce using rule 62
	'('            reduce using rule 62
	'{'            reduce using rule 62
	'}'            reduce using rule 62


State 137

	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)
	exprs -> expr . exprs                               (rule 60)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            shift, and enter state 85
	'|'            shift, and enter state 86
	'^'            shift, and enter state 87
	'('            shift, and enter state 45
	'{'            shift, and enter state 46
	'}'            reduce using rule 59

	expr           goto state 137
	lval           goto state 30
	exprs          goto state 157

State 138

	expr -> '{' vars exprs . '}'                        (rule 36)

	'}'            shift, and enter state 156


State 139

	func_decl -> funcs '{' func_list . '}'              (rule 25)

	'}'            shift, and enter state 155


State 140

	func_list -> func . func_list                       (rule 27)

	id             shift, and enter state 141
	idc            shift, and enter state 142
	'}'            reduce using rule 26

	func_list      goto state 154
	func           goto state 140

State 141

	func -> id . '(' params ')' ':' type_reg expr       (rule 28)

	'('            shift, and enter state 153


State 142

	func -> idc . params ')' ':' type_reg expr          (rule 29)

	id             shift, and enter state 152
	')'            reduce using rule 30

	params         goto state 150
	param          goto state 151

State 143

	state_var -> id ':' type_state . '=' expr           (rule 23)

	'='            shift, and enter state 149


State 144

	type_state -> type_reg .                            (rule 104)

	'='            reduce using rule 104


State 145

	pal -> Id ':' pal_type '=' '[' . color_list ']'     (rule 5)

	'('            shift, and enter state 148

	color_list     goto state 146
	color          goto state 147

State 146

	pal -> Id ':' pal_type '=' '[' color_list . ']'     (rule 5)

	']'            shift, and enter state 204


State 147

	color_list -> color .                               (rule 7)
	color_list -> color . ',' color_list                (rule 8)

	']'            reduce using rule 7
	','            shift, and enter state 203


State 148

	color -> '(' . int ',' int ',' int ')'              (rule 9)

	int            shift, and enter state 202


State 149

	state_var -> id ':' type_state '=' . expr           (rule 23)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 201
	lval           goto state 30

State 150

	func -> idc params . ')' ':' type_reg expr          (rule 29)

	')'            shift, and enter state 200


State 151

	params -> param .                                   (rule 31)
	params -> param . ',' params                        (rule 32)

	')'            reduce using rule 31
	','            shift, and enter state 199


State 152

	param -> id . ':' type_reg                          (rule 33)

	':'            shift, and enter state 198


State 153

	func -> id '(' . params ')' ':' type_reg expr       (rule 28)

	id             shift, and enter state 152
	')'            reduce using rule 30

	params         goto state 197
	param          goto state 151

State 154

	func_list -> func func_list .                       (rule 27)

	'}'            reduce using rule 27


State 155

	func_decl -> funcs '{' func_list '}' .              (rule 25)

	'}'            reduce using rule 25


State 156

	expr -> '{' vars exprs '}' .                        (rule 36)

	funcs          reduce using rule 36
	int            reduce using rule 36
	rint           reduce using rule 36
	id             reduce using rule 36
	idc            reduce using rule 36
	Id             reduce using rule 36
	Idc            reduce using rule 36
	var            reduce using rule 36
	void           reduce using rule 36
	if             reduce using rule 36
	then           reduce using rule 36
	else           reduce using rule 36
	for            reduce using rule 36
	to             reduce using rule 36
	do             reduce using rule 36
	match          reduce using rule 36
	with           reduce using rule 36
	and            reduce using rule 36
	or             reduce using rule 36
	trans          reduce using rule 36
	shrink         reduce using rule 36
	ext            reduce using rule 36
	sext           reduce using rule 36
	'+'            reduce using rule 36
	'-'            reduce using rule 36
	'&'            reduce using rule 36
	'|'            reduce using rule 36
	'^'            reduce using rule 36
	'='            reduce using rule 36
	'/='           reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	']'            reduce using rule 36
	','            reduce using rule 36
	'<'            reduce using rule 36
	'>'            reduce using rule 36
	'<='           reduce using rule 36
	'>='           reduce using rule 36
	'<$'           reduce using rule 36
	'<=$'          reduce using rule 36
	'>$'           reduce using rule 36
	'>=$'          reduce using rule 36


State 157

	exprs -> expr exprs .                               (rule 60)

	'}'            reduce using rule 60


State 158

	var_decl -> var id ':' . type_reg '=' expr          (rule 63)

	Id             shift, and enter state 94
	bits           shift, and enter state 95
	range          shift, and enter state 96
	void           shift, and enter state 97

	type_reg       goto state 196

State 159

	expr -> sext '[' int ']' . '(' expr ')'             (rule 47)

	'('            shift, and enter state 195


State 160

	expr -> ext '[' int ']' . '(' expr ')'              (rule 46)

	'('            shift, and enter state 194


State 161

	expr -> shrink '[' int ']' . '(' expr ')'           (rule 48)

	'('            shift, and enter state 193


State 162

	expr -> trans '[' int ',' . int ']' '(' expr ')'    (rule 45)

	int            shift, and enter state 192


State 163

	expr -> match expr with '{' . cases '}'             (rule 44)

	Id             shift, and enter state 190
	Idc            shift, and enter state 191
	'}'            reduce using rule 67

	cases          goto state 187
	case           goto state 188
	pat            goto state 189

State 164

	expr -> for id '=' expr . to expr do expr           (rule 38)
	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)

	to             shift, and enter state 186
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            shift, and enter state 85
	'|'            shift, and enter state 86
	'^'            shift, and enter state 87


State 165

	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)
	pred -> expr comp expr .                            (rule 79)

	then           reduce using rule 79
	and            reduce using rule 79
	or             reduce using rule 79
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            shift, and enter state 85
	'|'            shift, and enter state 86
	'^'            shift, and enter state 87


State 166

	pred -> pred . and pred                             (rule 77)
	pred -> pred . or pred                              (rule 78)
	pred -> pred or pred .                              (rule 78)

	then           reduce using rule 78
	and            shift, and enter state 115
	or             reduce using rule 78


State 167

	pred -> pred . and pred                             (rule 77)
	pred -> pred and pred .                             (rule 77)
	pred -> pred . or pred                              (rule 78)

	then           reduce using rule 77
	and            reduce using rule 77
	or             reduce using rule 77


State 168

	expr -> if pred then expr . else expr               (rule 37)
	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)

	else           shift, and enter state 185
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            shift, and enter state 85
	'|'            shift, and enter state 86
	'^'            shift, and enter state 87


State 169

	pred -> pressed '[' int . ',' button ']'            (rule 80)

	','            shift, and enter state 184


State 170

	pred -> holding '[' int . ',' button ']'            (rule 81)

	','            shift, and enter state 183


State 171

	args -> expr ',' args .                             (rule 66)

	')'            reduce using rule 66


State 172

	lval -> id '[' expr ']' .                           (rule 58)

	'<-'           reduce using rule 58


State 173

	expr -> id '.' idc args . ')'                       (rule 43)

	')'            shift, and enter state 182


State 174

	type_cases -> type_case ',' type_cases .            (rule 15)

	'}'            reduce using rule 15


State 175

	type_reg -> range '[' . int ',' int ']'             (rule 106)

	int            shift, and enter state 181


State 176

	type_reg -> bits '[' . int ']'                      (rule 105)

	int            shift, and enter state 180


State 177

	type_vars -> type_reg ',' . type_vars               (rule 19)

	Id             shift, and enter state 94
	bits           shift, and enter state 95
	range          shift, and enter state 96
	void           shift, and enter state 97

	type_vars      goto state 179
	type_reg       goto state 93

State 178

	type_case -> Idc type_vars ')' .                    (rule 17)

	'}'            reduce using rule 17
	','            reduce using rule 17


State 179

	type_vars -> type_reg ',' type_vars .               (rule 19)

	')'            reduce using rule 19


State 180

	type_reg -> bits '[' int . ']'                      (rule 105)

	']'            shift, and enter state 238


State 181

	type_reg -> range '[' int . ',' int ']'             (rule 106)

	','            shift, and enter state 237


State 182

	expr -> id '.' idc args ')' .                       (rule 43)

	funcs          reduce using rule 43
	int            reduce using rule 43
	rint           reduce using rule 43
	id             reduce using rule 43
	idc            reduce using rule 43
	Id             reduce using rule 43
	Idc            reduce using rule 43
	var            reduce using rule 43
	void           reduce using rule 43
	if             reduce using rule 43
	then           reduce using rule 43
	else           reduce using rule 43
	for            reduce using rule 43
	to             reduce using rule 43
	do             reduce using rule 43
	match          reduce using rule 43
	with           reduce using rule 43
	and            reduce using rule 43
	or             reduce using rule 43
	trans          reduce using rule 43
	shrink         reduce using rule 43
	ext            reduce using rule 43
	sext           reduce using rule 43
	'+'            reduce using rule 43
	'-'            reduce using rule 43
	'&'            reduce using rule 43
	'|'            reduce using rule 43
	'^'            reduce using rule 43
	'='            reduce using rule 43
	'/='           reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'{'            reduce using rule 43
	'}'            reduce using rule 43
	']'            reduce using rule 43
	','            reduce using rule 43
	'<'            reduce using rule 43
	'>'            reduce using rule 43
	'<='           reduce using rule 43
	'>='           reduce using rule 43
	'<$'           reduce using rule 43
	'<=$'          reduce using rule 43
	'>$'           reduce using rule 43
	'>=$'          reduce using rule 43


State 183

	pred -> holding '[' int ',' . button ']'            (rule 81)

	A              shift, and enter state 224
	X              shift, and enter state 225
	L              shift, and enter state 226
	R              shift, and enter state 227
	B              shift, and enter state 228
	Y              shift, and enter state 229
	SELECT         shift, and enter state 230
	START          shift, and enter state 231
	UP             shift, and enter state 232
	DOWN           shift, and enter state 233
	LEFT           shift, and enter state 234
	RIGHT          shift, and enter state 235

	button         goto state 236

State 184

	pred -> pressed '[' int ',' . button ']'            (rule 80)

	A              shift, and enter state 224
	X              shift, and enter state 225
	L              shift, and enter state 226
	R              shift, and enter state 227
	B              shift, and enter state 228
	Y              shift, and enter state 229
	SELECT         shift, and enter state 230
	START          shift, and enter state 231
	UP             shift, and enter state 232
	DOWN           shift, and enter state 233
	LEFT           shift, and enter state 234
	RIGHT          shift, and enter state 235

	button         goto state 223

State 185

	expr -> if pred then expr else . expr               (rule 37)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 222
	lval           goto state 30

State 186

	expr -> for id '=' expr to . expr do expr           (rule 38)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 221
	lval           goto state 30

State 187

	expr -> match expr with '{' cases . '}'             (rule 44)

	'}'            shift, and enter state 220


State 188

	cases -> case . cases                               (rule 68)

	Id             shift, and enter state 190
	Idc            shift, and enter state 191
	'}'            reduce using rule 67

	cases          goto state 219
	case           goto state 188
	pat            goto state 189

State 189

	case -> pat . '->' expr                             (rule 69)

	'->'           shift, and enter state 218


State 190

	pat -> Id .                                         (rule 70)

	'->'           reduce using rule 70


State 191

	pat -> Idc . pats ')'                               (rule 71)

	id             shift, and enter state 217

	pats           goto state 216

State 192

	expr -> trans '[' int ',' int . ']' '(' expr ')'    (rule 45)

	']'            shift, and enter state 215


State 193

	expr -> shrink '[' int ']' '(' . expr ')'           (rule 48)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 214
	lval           goto state 30

State 194

	expr -> ext '[' int ']' '(' . expr ')'              (rule 46)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 213
	lval           goto state 30

State 195

	expr -> sext '[' int ']' '(' . expr ')'             (rule 47)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 212
	lval           goto state 30

State 196

	var_decl -> var id ':' type_reg . '=' expr          (rule 63)

	'='            shift, and enter state 211


State 197

	func -> id '(' params . ')' ':' type_reg expr       (rule 28)

	')'            shift, and enter state 210


State 198

	param -> id ':' . type_reg                          (rule 33)

	Id             shift, and enter state 94
	bits           shift, and enter state 95
	range          shift, and enter state 96
	void           shift, and enter state 97

	type_reg       goto state 209

State 199

	params -> param ',' . params                        (rule 32)

	id             shift, and enter state 152
	')'            reduce using rule 30

	params         goto state 208
	param          goto state 151

State 200

	func -> idc params ')' . ':' type_reg expr          (rule 29)

	':'            shift, and enter state 207


State 201

	state_var -> id ':' type_state '=' expr .           (rule 23)
	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)

	id             reduce using rule 23
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            shift, and enter state 85
	'|'            shift, and enter state 86
	'^'            shift, and enter state 87
	'}'            reduce using rule 23


State 202

	color -> '(' int . ',' int ',' int ')'              (rule 9)

	','            shift, and enter state 206


State 203

	color_list -> color ',' . color_list                (rule 8)

	'('            shift, and enter state 148

	color_list     goto state 205
	color          goto state 147

State 204

	pal -> Id ':' pal_type '=' '[' color_list ']' .     (rule 5)

	Id             reduce using rule 5
	'}'            reduce using rule 5


State 205

	color_list -> color ',' color_list .                (rule 8)

	']'            reduce using rule 8


State 206

	color -> '(' int ',' . int ',' int ')'              (rule 9)

	int            shift, and enter state 253


State 207

	func -> idc params ')' ':' . type_reg expr          (rule 29)

	Id             shift, and enter state 94
	bits           shift, and enter state 95
	range          shift, and enter state 96
	void           shift, and enter state 97

	type_reg       goto state 252

State 208

	params -> param ',' params .                        (rule 32)

	')'            reduce using rule 32


State 209

	param -> id ':' type_reg .                          (rule 33)

	')'            reduce using rule 33
	','            reduce using rule 33


State 210

	func -> id '(' params ')' . ':' type_reg expr       (rule 28)

	':'            shift, and enter state 251


State 211

	var_decl -> var id ':' type_reg '=' . expr          (rule 63)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 250
	lval           goto state 30

State 212

	expr -> sext '[' int ']' '(' expr . ')'             (rule 47)
	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)

	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            shift, and enter state 85
	'|'            shift, and enter state 86
	'^'            shift, and enter state 87
	')'            shift, and enter state 249


State 213

	expr -> ext '[' int ']' '(' expr . ')'              (rule 46)
	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)

	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            shift, and enter state 85
	'|'            shift, and enter state 86
	'^'            shift, and enter state 87
	')'            shift, and enter state 248


State 214

	expr -> shrink '[' int ']' '(' expr . ')'           (rule 48)
	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)

	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            shift, and enter state 85
	'|'            shift, and enter state 86
	'^'            shift, and enter state 87
	')'            shift, and enter state 247


State 215

	expr -> trans '[' int ',' int ']' . '(' expr ')'    (rule 45)

	'('            shift, and enter state 246


State 216

	pat -> Idc pats . ')'                               (rule 71)

	')'            shift, and enter state 245


State 217

	pats -> id .                                        (rule 72)
	pats -> id . ',' pats                               (rule 73)

	')'            reduce using rule 72
	','            shift, and enter state 244


State 218

	case -> pat '->' . expr                             (rule 69)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 243
	lval           goto state 30

State 219

	cases -> case cases .                               (rule 68)

	'}'            reduce using rule 68


State 220

	expr -> match expr with '{' cases '}' .             (rule 44)

	funcs          reduce using rule 44
	int            reduce using rule 44
	rint           reduce using rule 44
	id             reduce using rule 44
	idc            reduce using rule 44
	Id             reduce using rule 44
	Idc            reduce using rule 44
	var            reduce using rule 44
	void           reduce using rule 44
	if             reduce using rule 44
	then           reduce using rule 44
	else           reduce using rule 44
	for            reduce using rule 44
	to             reduce using rule 44
	do             reduce using rule 44
	match          reduce using rule 44
	with           reduce using rule 44
	and            reduce using rule 44
	or             reduce using rule 44
	trans          reduce using rule 44
	shrink         reduce using rule 44
	ext            reduce using rule 44
	sext           reduce using rule 44
	'+'            reduce using rule 44
	'-'            reduce using rule 44
	'&'            reduce using rule 44
	'|'            reduce using rule 44
	'^'            reduce using rule 44
	'='            reduce using rule 44
	'/='           reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'{'            reduce using rule 44
	'}'            reduce using rule 44
	']'            reduce using rule 44
	','            reduce using rule 44
	'<'            reduce using rule 44
	'>'            reduce using rule 44
	'<='           reduce using rule 44
	'>='           reduce using rule 44
	'<$'           reduce using rule 44
	'<=$'          reduce using rule 44
	'>$'           reduce using rule 44
	'>=$'          reduce using rule 44


State 221

	expr -> for id '=' expr to expr . do expr           (rule 38)
	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)

	do             shift, and enter state 242
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            shift, and enter state 85
	'|'            shift, and enter state 86
	'^'            shift, and enter state 87


State 222

	expr -> if pred then expr else expr .               (rule 37)
	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)

	funcs          reduce using rule 37
	int            reduce using rule 37
	rint           reduce using rule 37
	id             reduce using rule 37
	idc            reduce using rule 37
	Id             reduce using rule 37
	Idc            reduce using rule 37
	var            reduce using rule 37
	void           reduce using rule 37
	if             reduce using rule 37
	then           reduce using rule 37
	else           reduce using rule 37
	for            reduce using rule 37
	to             reduce using rule 37
	do             reduce using rule 37
	match          reduce using rule 37
	with           reduce using rule 37
	and            reduce using rule 37
	or             reduce using rule 37
	trans          reduce using rule 37
	shrink         reduce using rule 37
	ext            reduce using rule 37
	sext           reduce using rule 37
	'+'            reduce using rule 37
	'-'            reduce using rule 37
	'&'            reduce using rule 37
	'|'            reduce using rule 37
	'^'            reduce using rule 37
	'='            reduce using rule 37
	'/='           reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	']'            reduce using rule 37
	','            reduce using rule 37
	'<'            reduce using rule 37
	'>'            reduce using rule 37
	'<='           reduce using rule 37
	'>='           reduce using rule 37
	'<$'           reduce using rule 37
	'<=$'          reduce using rule 37
	'>$'           reduce using rule 37
	'>=$'          reduce using rule 37


State 223

	pred -> pressed '[' int ',' button . ']'            (rule 80)

	']'            shift, and enter state 241


State 224

	button -> A .                                       (rule 92)

	']'            reduce using rule 92


State 225

	button -> X .                                       (rule 93)

	']'            reduce using rule 93


State 226

	button -> L .                                       (rule 94)

	']'            reduce using rule 94


State 227

	button -> R .                                       (rule 95)

	']'            reduce using rule 95


State 228

	button -> B .                                       (rule 96)

	']'            reduce using rule 96


State 229

	button -> Y .                                       (rule 97)

	']'            reduce using rule 97


State 230

	button -> SELECT .                                  (rule 98)

	']'            reduce using rule 98


State 231

	button -> START .                                   (rule 99)

	']'            reduce using rule 99


State 232

	button -> UP .                                      (rule 100)

	']'            reduce using rule 100


State 233

	button -> DOWN .                                    (rule 101)

	']'            reduce using rule 101


State 234

	button -> LEFT .                                    (rule 102)

	']'            reduce using rule 102


State 235

	button -> RIGHT .                                   (rule 103)

	']'            reduce using rule 103


State 236

	pred -> holding '[' int ',' button . ']'            (rule 81)

	']'            shift, and enter state 240


State 237

	type_reg -> range '[' int ',' . int ']'             (rule 106)

	int            shift, and enter state 239


State 238

	type_reg -> bits '[' int ']' .                      (rule 105)

	int            reduce using rule 105
	rint           reduce using rule 105
	id             reduce using rule 105
	idc            reduce using rule 105
	Id             reduce using rule 105
	Idc            reduce using rule 105
	void           reduce using rule 105
	if             reduce using rule 105
	for            reduce using rule 105
	match          reduce using rule 105
	trans          reduce using rule 105
	shrink         reduce using rule 105
	ext            reduce using rule 105
	sext           reduce using rule 105
	'='            reduce using rule 105
	'('            reduce using rule 105
	')'            reduce using rule 105
	'{'            reduce using rule 105
	','            reduce using rule 105


State 239

	type_reg -> range '[' int ',' int . ']'             (rule 106)

	']'            shift, and enter state 260


State 240

	pred -> holding '[' int ',' button ']' .            (rule 81)

	then           reduce using rule 81
	and            reduce using rule 81
	or             reduce using rule 81


State 241

	pred -> pressed '[' int ',' button ']' .            (rule 80)

	then           reduce using rule 80
	and            reduce using rule 80
	or             reduce using rule 80


State 242

	expr -> for id '=' expr to expr do . expr           (rule 38)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 259
	lval           goto state 30

State 243

	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)
	case -> pat '->' expr .                             (rule 69)

	Id             reduce using rule 69
	Idc            reduce using rule 69
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            shift, and enter state 85
	'|'            shift, and enter state 86
	'^'            shift, and enter state 87
	'}'            reduce using rule 69


State 244

	pats -> id ',' . pats                               (rule 73)

	id             shift, and enter state 217

	pats           goto state 258

State 245

	pat -> Idc pats ')' .                               (rule 71)

	'->'           reduce using rule 71


State 246

	expr -> trans '[' int ',' int ']' '(' . expr ')'    (rule 45)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 257
	lval           goto state 30

State 247

	expr -> shrink '[' int ']' '(' expr ')' .           (rule 48)

	funcs          reduce using rule 48
	int            reduce using rule 48
	rint           reduce using rule 48
	id             reduce using rule 48
	idc            reduce using rule 48
	Id             reduce using rule 48
	Idc            reduce using rule 48
	var            reduce using rule 48
	void           reduce using rule 48
	if             reduce using rule 48
	then           reduce using rule 48
	else           reduce using rule 48
	for            reduce using rule 48
	to             reduce using rule 48
	do             reduce using rule 48
	match          reduce using rule 48
	with           reduce using rule 48
	and            reduce using rule 48
	or             reduce using rule 48
	trans          reduce using rule 48
	shrink         reduce using rule 48
	ext            reduce using rule 48
	sext           reduce using rule 48
	'+'            reduce using rule 48
	'-'            reduce using rule 48
	'&'            reduce using rule 48
	'|'            reduce using rule 48
	'^'            reduce using rule 48
	'='            reduce using rule 48
	'/='           reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'{'            reduce using rule 48
	'}'            reduce using rule 48
	']'            reduce using rule 48
	','            reduce using rule 48
	'<'            reduce using rule 48
	'>'            reduce using rule 48
	'<='           reduce using rule 48
	'>='           reduce using rule 48
	'<$'           reduce using rule 48
	'<=$'          reduce using rule 48
	'>$'           reduce using rule 48
	'>=$'          reduce using rule 48


State 248

	expr -> ext '[' int ']' '(' expr ')' .              (rule 46)

	funcs          reduce using rule 46
	int            reduce using rule 46
	rint           reduce using rule 46
	id             reduce using rule 46
	idc            reduce using rule 46
	Id             reduce using rule 46
	Idc            reduce using rule 46
	var            reduce using rule 46
	void           reduce using rule 46
	if             reduce using rule 46
	then           reduce using rule 46
	else           reduce using rule 46
	for            reduce using rule 46
	to             reduce using rule 46
	do             reduce using rule 46
	match          reduce using rule 46
	with           reduce using rule 46
	and            reduce using rule 46
	or             reduce using rule 46
	trans          reduce using rule 46
	shrink         reduce using rule 46
	ext            reduce using rule 46
	sext           reduce using rule 46
	'+'            reduce using rule 46
	'-'            reduce using rule 46
	'&'            reduce using rule 46
	'|'            reduce using rule 46
	'^'            reduce using rule 46
	'='            reduce using rule 46
	'/='           reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'{'            reduce using rule 46
	'}'            reduce using rule 46
	']'            reduce using rule 46
	','            reduce using rule 46
	'<'            reduce using rule 46
	'>'            reduce using rule 46
	'<='           reduce using rule 46
	'>='           reduce using rule 46
	'<$'           reduce using rule 46
	'<=$'          reduce using rule 46
	'>$'           reduce using rule 46
	'>=$'          reduce using rule 46


State 249

	expr -> sext '[' int ']' '(' expr ')' .             (rule 47)

	funcs          reduce using rule 47
	int            reduce using rule 47
	rint           reduce using rule 47
	id             reduce using rule 47
	idc            reduce using rule 47
	Id             reduce using rule 47
	Idc            reduce using rule 47
	var            reduce using rule 47
	void           reduce using rule 47
	if             reduce using rule 47
	then           reduce using rule 47
	else           reduce using rule 47
	for            reduce using rule 47
	to             reduce using rule 47
	do             reduce using rule 47
	match          reduce using rule 47
	with           reduce using rule 47
	and            reduce using rule 47
	or             reduce using rule 47
	trans          reduce using rule 47
	shrink         reduce using rule 47
	ext            reduce using rule 47
	sext           reduce using rule 47
	'+'            reduce using rule 47
	'-'            reduce using rule 47
	'&'            reduce using rule 47
	'|'            reduce using rule 47
	'^'            reduce using rule 47
	'='            reduce using rule 47
	'/='           reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'{'            reduce using rule 47
	'}'            reduce using rule 47
	']'            reduce using rule 47
	','            reduce using rule 47
	'<'            reduce using rule 47
	'>'            reduce using rule 47
	'<='           reduce using rule 47
	'>='           reduce using rule 47
	'<$'           reduce using rule 47
	'<=$'          reduce using rule 47
	'>$'           reduce using rule 47
	'>=$'          reduce using rule 47


State 250

	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)
	var_decl -> var id ':' type_reg '=' expr .          (rule 63)

	int            reduce using rule 63
	rint           reduce using rule 63
	id             reduce using rule 63
	idc            reduce using rule 63
	Id             reduce using rule 63
	Idc            reduce using rule 63
	var            reduce using rule 63
	void           reduce using rule 63
	if             reduce using rule 63
	for            reduce using rule 63
	match          reduce using rule 63
	trans          reduce using rule 63
	shrink         reduce using rule 63
	ext            reduce using rule 63
	sext           reduce using rule 63
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            shift, and enter state 85
	'|'            shift, and enter state 86
	'^'            shift, and enter state 87
	'('            reduce using rule 63
	'{'            reduce using rule 63
	'}'            reduce using rule 63


State 251

	func -> id '(' params ')' ':' . type_reg expr       (rule 28)

	Id             shift, and enter state 94
	bits           shift, and enter state 95
	range          shift, and enter state 96
	void           shift, and enter state 97

	type_reg       goto state 256

State 252

	func -> idc params ')' ':' type_reg . expr          (rule 29)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 255
	lval           goto state 30

State 253

	color -> '(' int ',' int . ',' int ')'              (rule 9)

	','            shift, and enter state 254


State 254

	color -> '(' int ',' int ',' . int ')'              (rule 9)

	int            shift, and enter state 263


State 255

	func -> idc params ')' ':' type_reg expr .          (rule 29)
	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)

	id             reduce using rule 29
	idc            reduce using rule 29
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            shift, and enter state 85
	'|'            shift, and enter state 86
	'^'            shift, and enter state 87
	'}'            reduce using rule 29


State 256

	func -> id '(' params ')' ':' type_reg . expr       (rule 28)

	int            shift, and enter state 31
	rint           shift, and enter state 32
	id             shift, and enter state 33
	idc            shift, and enter state 34
	Id             shift, and enter state 35
	Idc            shift, and enter state 36
	void           shift, and enter state 37
	if             shift, and enter state 38
	for            shift, and enter state 39
	match          shift, and enter state 40
	trans          shift, and enter state 41
	shrink         shift, and enter state 42
	ext            shift, and enter state 43
	sext           shift, and enter state 44
	'('            shift, and enter state 45
	'{'            shift, and enter state 46

	expr           goto state 262
	lval           goto state 30

State 257

	expr -> trans '[' int ',' int ']' '(' expr . ')'    (rule 45)
	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)

	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            shift, and enter state 85
	'|'            shift, and enter state 86
	'^'            shift, and enter state 87
	')'            shift, and enter state 261


State 258

	pats -> id ',' pats .                               (rule 73)

	')'            reduce using rule 73


State 259

	expr -> for id '=' expr to expr do expr .           (rule 38)
	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)

	funcs          reduce using rule 38
	int            reduce using rule 38
	rint           reduce using rule 38
	id             reduce using rule 38
	idc            reduce using rule 38
	Id             reduce using rule 38
	Idc            reduce using rule 38
	var            reduce using rule 38
	void           reduce using rule 38
	if             reduce using rule 38
	then           reduce using rule 38
	else           reduce using rule 38
	for            reduce using rule 38
	to             reduce using rule 38
	do             reduce using rule 38
	match          reduce using rule 38
	with           reduce using rule 38
	and            reduce using rule 38
	or             reduce using rule 38
	trans          reduce using rule 38
	shrink         reduce using rule 38
	ext            reduce using rule 38
	sext           reduce using rule 38
	'+'            reduce using rule 38
	'-'            reduce using rule 38
	'&'            reduce using rule 38
	'|'            reduce using rule 38
	'^'            reduce using rule 38
	'='            reduce using rule 38
	'/='           reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38
	']'            reduce using rule 38
	','            reduce using rule 38
	'<'            reduce using rule 38
	'>'            reduce using rule 38
	'<='           reduce using rule 38
	'>='           reduce using rule 38
	'<$'           reduce using rule 38
	'<=$'          reduce using rule 38
	'>$'           reduce using rule 38
	'>=$'          reduce using rule 38


State 260

	type_reg -> range '[' int ',' int ']' .             (rule 106)

	int            reduce using rule 106
	rint           reduce using rule 106
	id             reduce using rule 106
	idc            reduce using rule 106
	Id             reduce using rule 106
	Idc            reduce using rule 106
	void           reduce using rule 106
	if             reduce using rule 106
	for            reduce using rule 106
	match          reduce using rule 106
	trans          reduce using rule 106
	shrink         reduce using rule 106
	ext            reduce using rule 106
	sext           reduce using rule 106
	'='            reduce using rule 106
	'('            reduce using rule 106
	')'            reduce using rule 106
	'{'            reduce using rule 106
	','            reduce using rule 106


State 261

	expr -> trans '[' int ',' int ']' '(' expr ')' .    (rule 45)

	funcs          reduce using rule 45
	int            reduce using rule 45
	rint           reduce using rule 45
	id             reduce using rule 45
	idc            reduce using rule 45
	Id             reduce using rule 45
	Idc            reduce using rule 45
	var            reduce using rule 45
	void           reduce using rule 45
	if             reduce using rule 45
	then           reduce using rule 45
	else           reduce using rule 45
	for            reduce using rule 45
	to             reduce using rule 45
	do             reduce using rule 45
	match          reduce using rule 45
	with           reduce using rule 45
	and            reduce using rule 45
	or             reduce using rule 45
	trans          reduce using rule 45
	shrink         reduce using rule 45
	ext            reduce using rule 45
	sext           reduce using rule 45
	'+'            reduce using rule 45
	'-'            reduce using rule 45
	'&'            reduce using rule 45
	'|'            reduce using rule 45
	'^'            reduce using rule 45
	'='            reduce using rule 45
	'/='           reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'{'            reduce using rule 45
	'}'            reduce using rule 45
	']'            reduce using rule 45
	','            reduce using rule 45
	'<'            reduce using rule 45
	'>'            reduce using rule 45
	'<='           reduce using rule 45
	'>='           reduce using rule 45
	'<$'           reduce using rule 45
	'<=$'          reduce using rule 45
	'>$'           reduce using rule 45
	'>=$'          reduce using rule 45


State 262

	func -> id '(' params ')' ':' type_reg expr .       (rule 28)
	expr -> expr . '+' expr                             (rule 49)
	expr -> expr . '-' expr                             (rule 50)
	expr -> expr . '&' expr                             (rule 51)
	expr -> expr . '^' expr                             (rule 52)
	expr -> expr . '|' expr                             (rule 53)

	id             reduce using rule 28
	idc            reduce using rule 28
	'+'            shift, and enter state 83
	'-'            shift, and enter state 84
	'&'            shift, and enter state 85
	'|'            shift, and enter state 86
	'^'            shift, and enter state 87
	'}'            reduce using rule 28


State 263

	color -> '(' int ',' int ',' int . ')'              (rule 9)

	')'            shift, and enter state 264


State 264

	color -> '(' int ',' int ',' int ')' .              (rule 9)

	']'            reduce using rule 9
	','            reduce using rule 9


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 109
Number of terminals: 75
Number of non-terminals: 38
Number of states: 265
