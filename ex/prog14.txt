mode PalTest {
  graphics {
    Numbers: sprite[10] = "../ex/graphics.gfx"
  }
  palettes {
    Red: sprite = [ (00, 00, 00)
                  , (30, 30, 30)
                  , (00, 00, 00)
                  , (00, 00, 00)
                  , (00, 00, 00)
                  , (00, 00, 00)
                  , (00, 00, 00)
                  , (00, 00, 00)
                  , (00, 00, 00)
                  , (00, 00, 00)
                  , (00, 00, 31)
                  , (00, 00, 00)
                  , (00, 00, 00)
                  , (00, 00, 00)
                  , (00, 00, 00)
                  , (00, 00, 00)
                  ]
  }
  types {
  }
  state {
      counter: range[0, 100]   = transmute[0, 100](r0)
      holder:  range[0, 10000] = transmute[0, 10000](r0)
  }
  main {
    if pressed[1, UP] then
        counter <- transmute[0, 100](counter + r1)
    else if pressed[1, DOWN] then
        counter <- transmute[0, 100](counter - r1)
    else
        counter
        
    if holding[1, A] then
        holder <- transmute[0, 10000](holder + r1)
    else
        holder <- transmute[0, 10000](holder - r1)

  }
  functions {
  }
  sprites {
    Foo(foo, bar) {
      animations {
        Test {
          at (0, 0): Numbers[0] in Red
          at (0, 8): Numbers[1] in Red
        }
        TestTwo {
          at (0, 0): Numbers[2] in Red
        }
      }
      state {
        x: range[0, 12] = transmute[0, 12](r6)
      }
      methods {
        run(): void {
        }
      }
    }
    SpriteTwo(cake) {
      animations { }
      state {
        zz: bits[8] = 200
        zzz: bits[8] = 201
        zzzz: bits[8] = 255
      }
      methods { }
    }
  }
}
